{"version":3,"sources":["webpack://[name]/./src/scripts/modules/types/definitions/collection/index.js","webpack://[name]/./src/scripts/modules/types/styles/theme.js","webpack://[name]/./src/scripts/modules/types/styles/build_theme.js","webpack://[name]/./src/scripts/modules/types/definitions/collection/collection.js","webpack://[name]/./src/scripts/modules/types/definitions/base/index.js","webpack://[name]/./src/scripts/modules/types/definitions/collection/sub_types/index.js"],"names":["__webpack_require__","r","__webpack_exports__","_collection__WEBPACK_IMPORTED_MODULE_0__","d","_sub_types__WEBPACK_IMPORTED_MODULE_1__","theme","passiveBack","passiveGroupBack","activeGroupBack","openGroupBack","passiveItemBack","hoverItemBack","passiveBtn","activeEdit","activeDrag","activeDelete","header","label","headerSize","keySize","valueSize","labelSize","easeSpeed","raleway","cabin","roboto","fillStyles","useStyles","Object","entries","reduce","styles","_ref3","_ref4","_slicedToArray","selector","block","filledBlock","_ref","_ref2","rule","data","match","fillVal","replace","fillBlocks","buildTheme","settings","useTheme","deepMerge","orgTheme","base","div","elements","ul","li","buildChild","props","child","className","CollectionType","_this","_classCallCheck","this","_getPrototypeOf","call","_defineProperty","_assertThisInitialized","params","children","map","BaseType","value","_typeof","Array","isArray","br","span","config","concat","schema","key","parent","Values","PARENT_OVERWRITE","type","updateParentConstruct","constructor"],"mappings":"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","file":"type-definitions-collection.min.js","sourcesContent":["import CollectionType from  './collection'\nimport * as collSubTypes from './sub_types'\n\nexport {\n  CollectionType,\n  collSubTypes\n}","/*\n\n  lightBlue: '#00a5ff',\n  robinBlue: '#00c4c9',\n  brightGray: '#343b46',\n  grayShadow: '#ccc9c9',\n  graySand: '#cacbcc',\n  iconGray: '#c5c5c5',\n  lightGray: '#D8D7DC',\n  spanishGray: '#C0BFC4',\n  shuttleGray: '#545d6d',\n  \n  bunkerBlack: '#13161c',\n  ebonyBlack: '#242a35',\n  lightBlack: '#565656',\n  mirageBlack: '#19202b',\n\n  // Colors\n  dullWhite: '#f1eff5',\n  white: '#ffffff',\n  gray: '#bfbec3',\n  black: '#14171c',\n\n  blue: '#03a9f4',\n  lime: '#0fced1',\n  green: '#4caf50',\n  red: '#fa0719',\n  orange: '#fa7807',\n\n*/\n\nconst theme = {\n  // color states\n  passiveBack: '#FFFFFF',\n  // Group of items background color\n  passiveGroupBack: '#FFFFFF',\n  activeGroupBack: '#F1EFF5',\n  openGroupBack: '#FFFFFF',\n  // Single Item background color\n  passiveItemBack: '#FFFFFF',\n  hoverItemBack: '#F1EFF5',\n  \n  // Buttons states\n  passiveBtn: '#565656',\n  activeEdit: '#0FCED1',\n  activeDrag: '#03A9F4',\n  activeDelete: '#FA0719',\n  \n  // Labels\n  header: '#565656',\n  label: '#8692a8',\n  \n  // Sizes\n  headerSize: '14px',\n  keySize: '12px',\n  valueSize: '12px',\n  labelSize: '10px',\n  \n  // Speeds\n  easeSpeed: `0.5s`,\n  // Fonts\n  raleway: `\"Raleway\", sans-serif`,\n  cabin: `\"Cabin\", sans-serif`,\n  roboto: `\"Roboto\", sans-serif`,\n\n}\n\n\nexport default theme","import base from './base.css'\nimport orgTheme from './theme'\nimport { deepMerge } from '../../../utils'\n\nconst fillBlocks = (block, theme) => (\n  Object\n    .entries(block)\n    .reduce((filledBlock, [ rule, data ]) => {\n      const match = data.match(/@\\S*/i)\n      // If no match, just set and return\n      if(!match)\n        return (filledBlock[rule] = data) && filledBlock\n\n      // Remove the @ so we can find the theme value\n      const fillVal = theme[match[0].replace('@', '')]\n      // Replace the matched value with the theme values\n      fillVal && (filledBlock[rule] = data.replace(match[0], fillVal))\n\n      return filledBlock\n    }, {})\n)\n\nconst fillStyles = (theme, useStyles) => (\n  Object\n  .entries(useStyles)\n  .reduce((styles, [ selector, block ]) => (\n    (styles[selector] = fillBlocks(block, theme)) && styles\n  ), {})\n)\n\n\nexport const buildTheme = settings => {\n  const useTheme = settings.theme\n    ? deepMerge(orgTheme, settings.theme)\n    : orgTheme\n  \n  const useStyles = settings.styles\n    ? deepMerge(base, settings.styles)\n    : base\n  \n  return fillStyles(useTheme, useStyles)\n}\n","import BaseType from '../base'\nimport { elements } from 'element-r'\nconst { div, ul, li} = elements\n\nconst buildChild = (props, child) => {\n  return li({ className: 'collection-list-item list-item' }, child )\n}\n\nclass CollectionType extends BaseType {\n  \n  static priority = 1\n  static eval = value => typeof value === 'object' && Array.isArray(value)\n  \n  constructor(settings){\n    super(settings)\n  }\n  \n  build = (params) => {\n    // console.log('------------------params------------------');\n    // console.log(params.schema);\n  }\n  \n  render = (props) => {\n    const children = props.children || []\n\n    return div({ className: `collection-wrapper list-wrapper` },\n      ul({ className: 'collection-list list-items' },\n        children.map(child => buildChild(props, child))\n      )\n    )\n    \n  }\n  \n}\n\n\n\nexport default CollectionType","import { buildTheme } from '../../styles/build_theme'\nimport { Values } from '../../../../constants'\nimport { er, elements } from 'element-r'\nconst { div, br, span } = elements\n\n\nconst updateParentConstruct = (config, parent) => {\n  Object.entries(Values.PARENT_OVERWRITE).map(([ key, type ]) => {\n    if(typeof config[key] === type && parent[key] !== config[key])\n      parent[key] = config[key]\n  })\n}\n\nlet STYLES_LOADED\nclass BaseType {\n\n  static priority = 0\n  static matchHelper = () => {}\n  static eval = (value) => (typeof value === 'string')\n\n  static getStyles = (settings) => buildTheme(settings)\n  \n  constructor(config){\n    config && updateParentConstruct(config, this.constructor)\n  }\n\n  build = (params) => {\n    \n  }\n  \n  render = props => {\n    return div({ className: `base-wrapper wrapper` },\n      span(`Key: ${props.schema.key}`),\n      br(),\n      span(`Value: ${props.schema.value}`),\n    )\n  }\n  \n}\n\n\nexport default BaseType","export {}"],"sourceRoot":""}