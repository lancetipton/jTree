{"version":3,"sources":["webpack://[name]/./src/scripts/modules/types/definitions/boolean/index.js","webpack://[name]/./src/scripts/modules/types/definitions/boolean/boolean.js"],"names":["__webpack_require__","r","__webpack_exports__","_boolean__WEBPACK_IMPORTED_MODULE_0__","d","BooleanType","config","_this","_classCallCheck","this","_getPrototypeOf","call","_objectSpread","_defineProperty","_assertThisInitialized","props","_props$schema","schema","id","key","value","mode","matchType","keyType","parent","error","options","Array","isArray","Item","toString","type","showLabel","valueEl","keyEdit","getActions","BaseType"],"mappings":"oKAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,IAAAA,EAAAI,EAAAF,EAAA,gCAAAC,EAAA,kkCCGME,cAMJ,SAAAA,EAAYC,GAAO,IAAAC,MAAA,mGAAAC,CAAAC,KAAAJ,KACjBI,OAAAC,EAAAL,GAAAM,KAAAF,KAAAG,EAAA,GAAWN,IAAXC,mDADiBM,EAAAC,EAAAP,GAAA,SAIV,SAAAQ,GAAS,IAAAC,EACgED,EAAxEE,OAAUC,EADFF,EACEE,GAAIC,EADNH,EACMG,IAAKC,EADXJ,EACWI,MAAOC,EADlBL,EACkBK,KAAMC,EADxBN,EACwBM,UAAWC,EADnCP,EACmCO,QAASC,EAD5CR,EAC4CQ,OAAQC,EADpDT,EACoDS,MAC9DC,EAAUC,MAAMC,QAAQrB,EAAKD,OAAOoB,SACtCnB,EAAKD,OAAOoB,QACZ,CAAE,OAAQ,SAEd,OAAOG,eAAIjB,EAAA,CACTM,KACAC,MACAC,MAAOA,EAAMU,WACbT,OACAK,UACAD,QACAM,KAAMT,EACNU,WAAW,EACXC,QAAS,SACTC,SAAUV,IAAWG,MAAMC,QAAQJ,EAAOJ,OAC1CG,QAASA,GAAW,QACjBhB,EAAK4B,WAAWd,OAtBJd,8OANK6B,qBAApB/B,aAEc,KAFdA,SAGU,SAACe,GAAD,MAA6B,kBAAVA,MAH7Bf,iBAIkB,kBAAM,IA8BfA","file":"type-definitions-boolean.min.js","sourcesContent":["import BooleanType from  './boolean'\n\nexport {\n  BooleanType,\n}","import BaseType from '../base'\nimport { Item } from '../../components'\n\nclass BooleanType extends BaseType {\n\n  static priority = 1\n  static eval = (value) => (typeof value === 'boolean')\n  static defaultValue = () => true\n  \n  constructor(config){\n    super({ ...config })\n  }\n\n  render = props => {\n    const { schema: { id, key, value, mode, matchType, keyType, parent, error } } = props\n    const options = Array.isArray(this.config.options)\n      ? this.config.options\n      : [ 'true', 'false']\n\n    return Item({\n      id,\n      key,\n      value: value.toString(),\n      mode,\n      options,\n      error,\n      type: matchType,\n      showLabel: true,\n      valueEl: 'select',\n      keyEdit: !parent || !Array.isArray(parent.value),\n      keyType: keyType || 'text',\n      ...this.getActions(mode)\n    })\n  }\n  \n}\n\nexport default BooleanType"],"sourceRoot":""}