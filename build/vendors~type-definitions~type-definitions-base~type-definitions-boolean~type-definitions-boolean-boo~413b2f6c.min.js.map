{"version":3,"sources":["webpack://[name]/./node_modules/cleave.js/dist/cleave.js"],"names":["factory","modules","installedModules","__webpack_require__","moduleId","exports","module","id","loaded","call","m","c","p","global","Cleave","element","opts","hasMultipleElements","this","document","querySelector","querySelectorAll","length","Error","console","warn","e","initValue","value","properties","DefaultProperties","assign","init","prototype","pps","numeral","phone","creditCard","time","date","blocksLength","prefix","maxLength","Util","getMaxLength","blocks","isAndroid","lastInputValue","onChangeListener","onChange","bind","onKeyDownListener","onKeyDown","onFocusListener","onFocus","onCutListener","onCut","onCopyListener","onCopy","addEventListener","initPhoneFormatter","initDateFormatter","initTimeFormatter","initNumeralFormatter","noImmediatePrefix","onInput","numeralFormatter","NumeralFormatter","numeralDecimalMark","numeralIntegerScale","numeralDecimalScale","numeralThousandsGroupStyle","numeralPositiveOnly","stripLeadingZeroes","delimiter","timeFormatter","TimeFormatter","timePattern","timeFormat","getBlocks","dateFormatter","DateFormatter","datePattern","phoneFormatter","PhoneFormatter","root","AsYouTypeFormatter","phoneRegionCode","ex","event","charCode","which","keyCode","currentValue","hasBackspaceSupport","isAndroidBackspaceKeydown","postDelimiter","getPostDelimiter","delimiters","postDelimiterBackspace","fixPrefixCursor","copyClipboardData","inputValue","textToCopy","copyDelimiter","stripDelimiters","clipboardData","setData","window","preventDefault","postDelimiterAfter","headStr","result","format","slice","updateValueState","getValidatedDate","getValidatedTime","getPrefixStrippedValue","prefixLength","numericOnly","strip","uppercase","toUpperCase","lowercase","toLowerCase","updateCreditCardPropsByValue","getFormattedValue","delimiterLazyShow","creditCardInfo","CreditCardDetector","getInfo","creditCardStrictMode","creditCardType","type","onCreditCardTypeChanged","owner","endPos","selectionEnd","oldValue","newValue","getNextCursorPosition","setTimeout","setSelection","callOnValueChanged","onValueChanged","target","rawValue","getRawValue","setPhoneRegionCode","setRawValue","toString","replace","rawValueTrimPrefix","getISOFormatDate","getISOFormatTime","destroy","removeEventListener","groupStyle","thousand","delimiterRE","RegExp","lakh","wan","none","parts","partInteger","partDecimal","indexOf","split","initBlocks","forEach","push","addLeadingZero","index","sub","sub0","rest","parseInt","getFixedDateString","day","month","year","dayIndex","monthIndex","yearIndex","dayStartIndex","monthStartIndex","yearStartIndex","fullYearDone","getFixedDate","reduce","previous","current","addLeadingZeroForYear","Math","min","isLeapYear","number","getTimeFormatOptions","String","maxHourFirstDigit","maxHours","maxMinutesFirstDigit","maxMinutes","timeFormatOptions","getFixedTimeString","second","minute","hour","secondIndex","minuteIndex","hourIndex","secondStartIndex","minuteStartIndex","hourStartIndex","getFixedTime","formatter","setFormatter","phoneNumber","clear","validated","i","iMax","inputDigit","charAt","test","uatp","amex","diners","discover","mastercard","dankort","instapayment","jcb15","jcb","maestro","visa","mir","unionPay","general","generalStrict","re","strictMode","key","noop","matchedDelimiter","getDelimiterREByDelimiter","prevPos","getPositionOffset","oldRawValue","newRawValue","lengthOffset","abs","letter","str","prevResult","prevValue","getFirstDiffIndex","prev","currentDelimiter","multipleDelimiters","el","val","appendix","setSelectionRange","len","position","doc","getActiveElement","createTextRange","range","move","select","parent","activeElement","shadowRoot","navigator","userAgent","currentInputValue","undefined","delimiterLength","backspace"],"mappings":"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","file":"vendors~type-definitions~type-definitions-base~type-definitions-boolean~type-definitions-boolean-boo~413b2f6c.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Cleave\"] = factory();\n\telse\n\t\troot[\"Cleave\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Construct a new Cleave instance by passing the configuration object\n\t *\n\t * @param {String | HTMLElement} element\n\t * @param {Object} opts\n\t */\n\tvar Cleave = function (element, opts) {\n\t    var owner = this;\n\t    var hasMultipleElements = false;\n\n\t    if (typeof element === 'string') {\n\t        owner.element = document.querySelector(element);\n\t        hasMultipleElements = document.querySelectorAll(element).length > 1;\n\t    } else {\n\t      if (typeof element.length !== 'undefined' && element.length > 0) {\n\t        owner.element = element[0];\n\t        hasMultipleElements = element.length > 1;\n\t      } else {\n\t        owner.element = element;\n\t      }\n\t    }\n\n\t    if (!owner.element) {\n\t        throw new Error('[cleave.js] Please check the element');\n\t    }\n\n\t    if (hasMultipleElements) {\n\t      try {\n\t        // eslint-disable-next-line\n\t        console.warn('[cleave.js] Multiple input fields matched, cleave.js will only take the first one.');\n\t      } catch (e) {\n\t        // Old IE\n\t      }\n\t    }\n\n\t    opts.initValue = owner.element.value;\n\n\t    owner.properties = Cleave.DefaultProperties.assign({}, opts);\n\n\t    owner.init();\n\t};\n\n\tCleave.prototype = {\n\t    init: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        // no need to use this lib\n\t        if (!pps.numeral && !pps.phone && !pps.creditCard && !pps.time && !pps.date && (pps.blocksLength === 0 && !pps.prefix)) {\n\t            owner.onInput(pps.initValue);\n\n\t            return;\n\t        }\n\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\n\t        owner.isAndroid = Cleave.Util.isAndroid();\n\t        owner.lastInputValue = '';\n\n\t        owner.onChangeListener = owner.onChange.bind(owner);\n\t        owner.onKeyDownListener = owner.onKeyDown.bind(owner);\n\t        owner.onFocusListener = owner.onFocus.bind(owner);\n\t        owner.onCutListener = owner.onCut.bind(owner);\n\t        owner.onCopyListener = owner.onCopy.bind(owner);\n\n\t        owner.element.addEventListener('input', owner.onChangeListener);\n\t        owner.element.addEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.addEventListener('focus', owner.onFocusListener);\n\t        owner.element.addEventListener('cut', owner.onCutListener);\n\t        owner.element.addEventListener('copy', owner.onCopyListener);\n\n\n\t        owner.initPhoneFormatter();\n\t        owner.initDateFormatter();\n\t        owner.initTimeFormatter();\n\t        owner.initNumeralFormatter();\n\n\t        // avoid touch input field if value is null\n\t        // otherwise Firefox will add red box-shadow for <input required />\n\t        if (pps.initValue || (pps.prefix && !pps.noImmediatePrefix)) {\n\t            owner.onInput(pps.initValue);\n\t        }\n\t    },\n\n\t    initNumeralFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.numeral) {\n\t            return;\n\t        }\n\n\t        pps.numeralFormatter = new Cleave.NumeralFormatter(\n\t            pps.numeralDecimalMark,\n\t            pps.numeralIntegerScale,\n\t            pps.numeralDecimalScale,\n\t            pps.numeralThousandsGroupStyle,\n\t            pps.numeralPositiveOnly,\n\t            pps.stripLeadingZeroes,\n\t            pps.delimiter\n\t        );\n\t    },\n\n\t    initTimeFormatter: function() {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.time) {\n\t            return;\n\t        }\n\n\t        pps.timeFormatter = new Cleave.TimeFormatter(pps.timePattern, pps.timeFormat);\n\t        pps.blocks = pps.timeFormatter.getBlocks();\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\t    },\n\n\t    initDateFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.date) {\n\t            return;\n\t        }\n\n\t        pps.dateFormatter = new Cleave.DateFormatter(pps.datePattern);\n\t        pps.blocks = pps.dateFormatter.getBlocks();\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Cleave.Util.getMaxLength(pps.blocks);\n\t    },\n\n\t    initPhoneFormatter: function () {\n\t        var owner = this, pps = owner.properties;\n\n\t        if (!pps.phone) {\n\t            return;\n\t        }\n\n\t        // Cleave.AsYouTypeFormatter should be provided by\n\t        // external google closure lib\n\t        try {\n\t            pps.phoneFormatter = new Cleave.PhoneFormatter(\n\t                new pps.root.Cleave.AsYouTypeFormatter(pps.phoneRegionCode),\n\t                pps.delimiter\n\t            );\n\t        } catch (ex) {\n\t            throw new Error('[cleave.js] Please include phone-type-formatter.{country}.js lib');\n\t        }\n\t    },\n\n\t    onKeyDown: function (event) {\n\t        var owner = this, pps = owner.properties,\n\t            charCode = event.which || event.keyCode,\n\t            Util = Cleave.Util,\n\t            currentValue = owner.element.value;\n\n\t        // if we got any charCode === 8, this means, that this device correctly\n\t        // sends backspace keys in event, so we do not need to apply any hacks\n\t        owner.hasBackspaceSupport = owner.hasBackspaceSupport || charCode === 8;\n\t        if (!owner.hasBackspaceSupport\n\t          && Util.isAndroidBackspaceKeydown(owner.lastInputValue, currentValue)\n\t        ) {\n\t            charCode = 8;\n\t        }\n\n\t        owner.lastInputValue = currentValue;\n\n\t        // hit backspace when last character is delimiter\n\t        var postDelimiter = Util.getPostDelimiter(currentValue, pps.delimiter, pps.delimiters);\n\t        if (charCode === 8 && postDelimiter) {\n\t            pps.postDelimiterBackspace = postDelimiter;\n\t        } else {\n\t            pps.postDelimiterBackspace = false;\n\t        }\n\t    },\n\n\t    onChange: function () {\n\t        this.onInput(this.element.value);\n\t    },\n\n\t    onFocus: function () {\n\t        var owner = this,\n\t            pps = owner.properties;\n\n\t        Cleave.Util.fixPrefixCursor(owner.element, pps.prefix, pps.delimiter, pps.delimiters);\n\t    },\n\n\t    onCut: function (e) {\n\t        this.copyClipboardData(e);\n\t        this.onInput('');\n\t    },\n\n\t    onCopy: function (e) {\n\t        this.copyClipboardData(e);\n\t    },\n\n\t    copyClipboardData: function (e) {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            inputValue = owner.element.value,\n\t            textToCopy = '';\n\n\t        if (!pps.copyDelimiter) {\n\t            textToCopy = Util.stripDelimiters(inputValue, pps.delimiter, pps.delimiters);\n\t        } else {\n\t            textToCopy = inputValue;\n\t        }\n\n\t        try {\n\t            if (e.clipboardData) {\n\t                e.clipboardData.setData('Text', textToCopy);\n\t            } else {\n\t                window.clipboardData.setData('Text', textToCopy);\n\t            }\n\n\t            e.preventDefault();\n\t        } catch (ex) {\n\t            //  empty\n\t        }\n\t    },\n\n\t    onInput: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util;\n\n\t        // case 1: delete one more character \"4\"\n\t        // 1234*| -> hit backspace -> 123|\n\t        // case 2: last character is not delimiter which is:\n\t        // 12|34* -> hit backspace -> 1|34*\n\t        // note: no need to apply this for numeral mode\n\t        var postDelimiterAfter = Util.getPostDelimiter(value, pps.delimiter, pps.delimiters);\n\t        if (!pps.numeral && pps.postDelimiterBackspace && !postDelimiterAfter) {\n\t            value = Util.headStr(value, value.length - pps.postDelimiterBackspace.length);\n\t        }\n\n\t        // phone formatter\n\t        if (pps.phone) {\n\t            if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t                pps.result = pps.prefix + pps.phoneFormatter.format(value).slice(pps.prefix.length);\n\t            } else {\n\t                pps.result = pps.phoneFormatter.format(value);\n\t            }\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // numeral formatter\n\t        if (pps.numeral) {\n\t            if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t                pps.result = pps.prefix + pps.numeralFormatter.format(value);\n\t            } else {\n\t                pps.result = pps.numeralFormatter.format(value);\n\t            }\n\t            owner.updateValueState();\n\n\t            return;\n\t        }\n\n\t        // date\n\t        if (pps.date) {\n\t            value = pps.dateFormatter.getValidatedDate(value);\n\t        }\n\n\t        // time\n\t        if (pps.time) {\n\t            value = pps.timeFormatter.getValidatedTime(value);\n\t        }\n\n\t        // strip delimiters\n\t        value = Util.stripDelimiters(value, pps.delimiter, pps.delimiters);\n\n\t        // strip prefix\n\t        // var strippedPreviousResult = Util.stripDelimiters(pps.result, pps.delimiter, pps.delimiters);\n\t        value = Util.getPrefixStrippedValue(value, pps.prefix, pps.prefixLength, pps.result, pps.delimiter, pps.delimiters);\n\n\t        // strip non-numeric characters\n\t        value = pps.numericOnly ? Util.strip(value, /[^\\d]/g) : value;\n\n\t        // convert case\n\t        value = pps.uppercase ? value.toUpperCase() : value;\n\t        value = pps.lowercase ? value.toLowerCase() : value;\n\n\t        // prefix\n\t        if (pps.prefix && (!pps.noImmediatePrefix || value.length)) {\n\t            value = pps.prefix + value;\n\n\t            // no blocks specified, no need to do formatting\n\t            if (pps.blocksLength === 0) {\n\t                pps.result = value;\n\t                owner.updateValueState();\n\n\t                return;\n\t            }\n\t        }\n\n\t        // update credit card props\n\t        if (pps.creditCard) {\n\t            owner.updateCreditCardPropsByValue(value);\n\t        }\n\n\t        // strip over length characters\n\t        value = Util.headStr(value, pps.maxLength);\n\n\t        // apply blocks\n\t        pps.result = Util.getFormattedValue(\n\t            value,\n\t            pps.blocks, pps.blocksLength,\n\t            pps.delimiter, pps.delimiters, pps.delimiterLazyShow\n\t        );\n\n\t        owner.updateValueState();\n\t    },\n\n\t    updateCreditCardPropsByValue: function (value) {\n\t        var owner = this, pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            creditCardInfo;\n\n\t        // At least one of the first 4 characters has changed\n\t        if (Util.headStr(pps.result, 4) === Util.headStr(value, 4)) {\n\t            return;\n\t        }\n\n\t        creditCardInfo = Cleave.CreditCardDetector.getInfo(value, pps.creditCardStrictMode);\n\n\t        pps.blocks = creditCardInfo.blocks;\n\t        pps.blocksLength = pps.blocks.length;\n\t        pps.maxLength = Util.getMaxLength(pps.blocks);\n\n\t        // credit card type changed\n\t        if (pps.creditCardType !== creditCardInfo.type) {\n\t            pps.creditCardType = creditCardInfo.type;\n\n\t            pps.onCreditCardTypeChanged.call(owner, pps.creditCardType);\n\t        }\n\t    },\n\n\t    updateValueState: function () {\n\t        var owner = this,\n\t            Util = Cleave.Util,\n\t            pps = owner.properties;\n\n\t        if (!owner.element) {\n\t            return;\n\t        }\n\n\t        var endPos = owner.element.selectionEnd;\n\t        var oldValue = owner.element.value;\n\t        var newValue = pps.result;\n\n\t        endPos = Util.getNextCursorPosition(endPos, oldValue, newValue, pps.delimiter, pps.delimiters);\n\n\t        // fix Android browser type=\"text\" input field\n\t        // cursor not jumping issue\n\t        if (owner.isAndroid) {\n\t            window.setTimeout(function () {\n\t                owner.element.value = newValue;\n\t                Util.setSelection(owner.element, endPos, pps.document, false);\n\t                owner.callOnValueChanged();\n\t            }, 1);\n\n\t            return;\n\t        }\n\n\t        owner.element.value = newValue;\n\t        Util.setSelection(owner.element, endPos, pps.document, false);\n\t        owner.callOnValueChanged();\n\t    },\n\n\t    callOnValueChanged: function () {\n\t        var owner = this,\n\t            pps = owner.properties;\n\n\t        pps.onValueChanged.call(owner, {\n\t            target: {\n\t                value: pps.result,\n\t                rawValue: owner.getRawValue()\n\t            }\n\t        });\n\t    },\n\n\t    setPhoneRegionCode: function (phoneRegionCode) {\n\t        var owner = this, pps = owner.properties;\n\n\t        pps.phoneRegionCode = phoneRegionCode;\n\t        owner.initPhoneFormatter();\n\t        owner.onChange();\n\t    },\n\n\t    setRawValue: function (value) {\n\t        var owner = this, pps = owner.properties;\n\n\t        value = value !== undefined && value !== null ? value.toString() : '';\n\n\t        if (pps.numeral) {\n\t            value = value.replace('.', pps.numeralDecimalMark);\n\t        }\n\n\t        pps.postDelimiterBackspace = false;\n\n\t        owner.element.value = value;\n\t        owner.onInput(value);\n\t    },\n\n\t    getRawValue: function () {\n\t        var owner = this,\n\t            pps = owner.properties,\n\t            Util = Cleave.Util,\n\t            rawValue = owner.element.value;\n\n\t        if (pps.rawValueTrimPrefix) {\n\t            rawValue = Util.getPrefixStrippedValue(rawValue, pps.prefix, pps.prefixLength, pps.result, pps.delimiter, pps.delimiters);\n\t        }\n\n\t        if (pps.numeral) {\n\t            rawValue = pps.numeralFormatter.getRawValue(rawValue);\n\t        } else {\n\t            rawValue = Util.stripDelimiters(rawValue, pps.delimiter, pps.delimiters);\n\t        }\n\n\t        return rawValue;\n\t    },\n\n\t    getISOFormatDate: function () {\n\t        var owner = this,\n\t            pps = owner.properties;\n\n\t        return pps.date ? pps.dateFormatter.getISOFormatDate() : '';\n\t    },\n\n\t    getISOFormatTime: function () {\n\t        var owner = this,\n\t            pps = owner.properties;\n\n\t        return pps.time ? pps.timeFormatter.getISOFormatTime() : '';\n\t    },\n\n\t    getFormattedValue: function () {\n\t        return this.element.value;\n\t    },\n\n\t    destroy: function () {\n\t        var owner = this;\n\n\t        owner.element.removeEventListener('input', owner.onChangeListener);\n\t        owner.element.removeEventListener('keydown', owner.onKeyDownListener);\n\t        owner.element.removeEventListener('focus', owner.onFocusListener);\n\t        owner.element.removeEventListener('cut', owner.onCutListener);\n\t        owner.element.removeEventListener('copy', owner.onCopyListener);\n\t    },\n\n\t    toString: function () {\n\t        return '[Cleave Object]';\n\t    }\n\t};\n\n\tCleave.NumeralFormatter = __webpack_require__(1);\n\tCleave.DateFormatter = __webpack_require__(2);\n\tCleave.TimeFormatter = __webpack_require__(3);\n\tCleave.PhoneFormatter = __webpack_require__(4);\n\tCleave.CreditCardDetector = __webpack_require__(5);\n\tCleave.Util = __webpack_require__(6);\n\tCleave.DefaultProperties = __webpack_require__(7);\n\n\t// for angular directive\n\t((typeof global === 'object' && global) ? global : window)['Cleave'] = Cleave;\n\n\t// CommonJS\n\tmodule.exports = Cleave;\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar NumeralFormatter = function (numeralDecimalMark,\n\t                                 numeralIntegerScale,\n\t                                 numeralDecimalScale,\n\t                                 numeralThousandsGroupStyle,\n\t                                 numeralPositiveOnly,\n\t                                 stripLeadingZeroes,\n\t                                 delimiter) {\n\t    var owner = this;\n\n\t    owner.numeralDecimalMark = numeralDecimalMark || '.';\n\t    owner.numeralIntegerScale = numeralIntegerScale > 0 ? numeralIntegerScale : 0;\n\t    owner.numeralDecimalScale = numeralDecimalScale >= 0 ? numeralDecimalScale : 2;\n\t    owner.numeralThousandsGroupStyle = numeralThousandsGroupStyle || NumeralFormatter.groupStyle.thousand;\n\t    owner.numeralPositiveOnly = !!numeralPositiveOnly;\n\t    owner.stripLeadingZeroes = stripLeadingZeroes !== false;\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ',';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\t};\n\n\tNumeralFormatter.groupStyle = {\n\t    thousand: 'thousand',\n\t    lakh:     'lakh',\n\t    wan:      'wan',\n\t    none:     'none'    \n\t};\n\n\tNumeralFormatter.prototype = {\n\t    getRawValue: function (value) {\n\t        return value.replace(this.delimiterRE, '').replace(this.numeralDecimalMark, '.');\n\t    },\n\n\t    format: function (value) {\n\t        var owner = this, parts, partInteger, partDecimal = '';\n\n\t        // strip alphabet letters\n\t        value = value.replace(/[A-Za-z]/g, '')\n\t            // replace the first decimal mark with reserved placeholder\n\t            .replace(owner.numeralDecimalMark, 'M')\n\n\t            // strip non numeric letters except minus and \"M\"\n\t            // this is to ensure prefix has been stripped\n\t            .replace(/[^\\dM-]/g, '')\n\n\t            // replace the leading minus with reserved placeholder\n\t            .replace(/^\\-/, 'N')\n\n\t            // strip the other minus sign (if present)\n\t            .replace(/\\-/g, '')\n\n\t            // replace the minus sign (if present)\n\t            .replace('N', owner.numeralPositiveOnly ? '' : '-')\n\n\t            // replace decimal mark\n\t            .replace('M', owner.numeralDecimalMark);\n\n\t        // strip any leading zeros\n\t        if (owner.stripLeadingZeroes) {\n\t            value = value.replace(/^(-)?0+(?=\\d)/, '$1');\n\t        }\n\n\t        partInteger = value;\n\n\t        if (value.indexOf(owner.numeralDecimalMark) >= 0) {\n\t            parts = value.split(owner.numeralDecimalMark);\n\t            partInteger = parts[0];\n\t            partDecimal = owner.numeralDecimalMark + parts[1].slice(0, owner.numeralDecimalScale);\n\t        }\n\n\t        if (owner.numeralIntegerScale > 0) {\n\t          partInteger = partInteger.slice(0, owner.numeralIntegerScale + (value.slice(0, 1) === '-' ? 1 : 0));\n\t        }\n\n\t        switch (owner.numeralThousandsGroupStyle) {\n\t        case NumeralFormatter.groupStyle.lakh:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d\\d)+\\d$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        case NumeralFormatter.groupStyle.wan:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{4})+$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\n\t        case NumeralFormatter.groupStyle.thousand:\n\t            partInteger = partInteger.replace(/(\\d)(?=(\\d{3})+$)/g, '$1' + owner.delimiter);\n\n\t            break;\n\t        }\n\n\t        return partInteger.toString() + (owner.numeralDecimalScale > 0 ? partDecimal.toString() : '');\n\t    }\n\t};\n\n\tmodule.exports = NumeralFormatter;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar DateFormatter = function (datePattern) {\n\t    var owner = this;\n\n\t    owner.date = [];\n\t    owner.blocks = [];\n\t    owner.datePattern = datePattern;\n\t    owner.initBlocks();\n\t};\n\n\tDateFormatter.prototype = {\n\t    initBlocks: function () {\n\t        var owner = this;\n\t        owner.datePattern.forEach(function (value) {\n\t            if (value === 'Y') {\n\t                owner.blocks.push(4);\n\t            } else {\n\t                owner.blocks.push(2);\n\t            }\n\t        });\n\t    },\n\n\t    getISOFormatDate: function () {\n\t        var owner = this,\n\t            date = owner.date;\n\n\t        return date[2] ? (\n\t            date[2] + '-' + owner.addLeadingZero(date[1]) + '-' + owner.addLeadingZero(date[0])\n\t        ) : '';\n\t    },\n\n\t    getBlocks: function () {\n\t        return this.blocks;\n\t    },\n\n\t    getValidatedDate: function (value) {\n\t        var owner = this, result = '';\n\n\t        value = value.replace(/[^\\d]/g, '');\n\n\t        owner.blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    sub0 = sub.slice(0, 1),\n\t                    rest = value.slice(length);\n\n\t                switch (owner.datePattern[index]) {\n\t                case 'd':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 3) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 31) {\n\t                        sub = '31';\n\t                    }\n\n\t                    break;\n\n\t                case 'm':\n\t                    if (sub === '00') {\n\t                        sub = '01';\n\t                    } else if (parseInt(sub0, 10) > 1) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > 12) {\n\t                        sub = '12';\n\t                    }\n\n\t                    break;\n\t                }\n\n\t                result += sub;\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return this.getFixedDateString(result);\n\t    },\n\n\t    getFixedDateString: function (value) {\n\t        var owner = this, datePattern = owner.datePattern, date = [],\n\t            dayIndex = 0, monthIndex = 0, yearIndex = 0,\n\t            dayStartIndex = 0, monthStartIndex = 0, yearStartIndex = 0,\n\t            day, month, year, fullYearDone = false;\n\n\t        // mm-dd || dd-mm\n\t        if (value.length === 4 && datePattern[0].toLowerCase() !== 'y' && datePattern[1].toLowerCase() !== 'y') {\n\t            dayStartIndex = datePattern[0] === 'd' ? 0 : 2;\n\t            monthStartIndex = 2 - dayStartIndex;\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\n\t            date = this.getFixedDate(day, month, 0);\n\t        }\n\n\t        // yyyy-mm-dd || yyyy-dd-mm || mm-dd-yyyy || dd-mm-yyyy || dd-yyyy-mm || mm-yyyy-dd\n\t        if (value.length === 8) {\n\t            datePattern.forEach(function (type, index) {\n\t                switch (type) {\n\t                case 'd':\n\t                    dayIndex = index;\n\t                    break;\n\t                case 'm':\n\t                    monthIndex = index;\n\t                    break;\n\t                default:\n\t                    yearIndex = index;\n\t                    break;\n\t                }\n\t            });\n\n\t            yearStartIndex = yearIndex * 2;\n\t            dayStartIndex = (dayIndex <= yearIndex) ? dayIndex * 2 : (dayIndex * 2 + 2);\n\t            monthStartIndex = (monthIndex <= yearIndex) ? monthIndex * 2 : (monthIndex * 2 + 2);\n\n\t            day = parseInt(value.slice(dayStartIndex, dayStartIndex + 2), 10);\n\t            month = parseInt(value.slice(monthStartIndex, monthStartIndex + 2), 10);\n\t            year = parseInt(value.slice(yearStartIndex, yearStartIndex + 4), 10);\n\n\t            fullYearDone = value.slice(yearStartIndex, yearStartIndex + 4).length === 4;\n\n\t            date = this.getFixedDate(day, month, year);\n\t        }\n\n\t        owner.date = date;\n\n\t        return date.length === 0 ? value : datePattern.reduce(function (previous, current) {\n\t            switch (current) {\n\t            case 'd':\n\t                return previous + owner.addLeadingZero(date[0]);\n\t            case 'm':\n\t                return previous + owner.addLeadingZero(date[1]);\n\t            default:\n\t                return previous + (fullYearDone ? owner.addLeadingZeroForYear(date[2]) : '');\n\t            }\n\t        }, '');\n\t    },\n\n\t    getFixedDate: function (day, month, year) {\n\t        day = Math.min(day, 31);\n\t        month = Math.min(month, 12);\n\t        year = parseInt((year || 0), 10);\n\n\t        if ((month < 7 && month % 2 === 0) || (month > 8 && month % 2 === 1)) {\n\t            day = Math.min(day, month === 2 ? (this.isLeapYear(year) ? 29 : 28) : 30);\n\t        }\n\n\t        return [day, month, year];\n\t    },\n\n\t    isLeapYear: function (year) {\n\t        return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n\t    },\n\n\t    addLeadingZero: function (number) {\n\t        return (number < 10 ? '0' : '') + number;\n\t    },\n\n\t    addLeadingZeroForYear: function (number) {\n\t        return (number < 10 ? '000' : (number < 100 ? '00' : (number < 1000 ? '0' : ''))) + number;\n\t    }\n\t};\n\n\tmodule.exports = DateFormatter;\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar TimeFormatter = function (timePattern, timeFormat) {\n\t    var owner = this;\n\n\t    owner.time = [];\n\t    owner.blocks = [];\n\t    owner.timePattern = timePattern;\n\t    owner.timeFormat = timeFormat;\n\t    owner.initBlocks();\n\t};\n\n\tTimeFormatter.prototype = {\n\t    initBlocks: function () {\n\t        var owner = this;\n\t        owner.timePattern.forEach(function () {\n\t            owner.blocks.push(2);\n\t        });\n\t    },\n\n\t    getISOFormatTime: function () {\n\t        var owner = this,\n\t            time = owner.time;\n\n\t        return time[2] ? (\n\t            owner.addLeadingZero(time[0]) + ':' + owner.addLeadingZero(time[1]) + ':' + owner.addLeadingZero(time[2])\n\t        ) : '';\n\t    },\n\n\t    getBlocks: function () {\n\t        return this.blocks;\n\t    },\n\n\t    getTimeFormatOptions: function () {\n\t        var owner = this;\n\t        if (String(owner.timeFormat) === '12') {\n\t            return {\n\t                maxHourFirstDigit: 1,\n\t                maxHours: 12,\n\t                maxMinutesFirstDigit: 5,\n\t                maxMinutes: 60\n\t            };\n\t        }\n\n\t        return {\n\t            maxHourFirstDigit: 2,\n\t            maxHours: 23,\n\t            maxMinutesFirstDigit: 5,\n\t            maxMinutes: 60\n\t        };\n\t    },\n\n\t    getValidatedTime: function (value) {\n\t        var owner = this, result = '';\n\n\t        value = value.replace(/[^\\d]/g, '');\n\n\t        var timeFormatOptions = owner.getTimeFormatOptions();\n\n\t        owner.blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    sub0 = sub.slice(0, 1),\n\t                    rest = value.slice(length);\n\n\t                switch (owner.timePattern[index]) {\n\n\t                case 'h':\n\t                    if (parseInt(sub0, 10) > timeFormatOptions.maxHourFirstDigit) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > timeFormatOptions.maxHours) {\n\t                        sub = timeFormatOptions.maxHours + '';\n\t                    }\n\n\t                    break;\n\n\t                case 'm':\n\t                case 's':\n\t                    if (parseInt(sub0, 10) > timeFormatOptions.maxMinutesFirstDigit) {\n\t                        sub = '0' + sub0;\n\t                    } else if (parseInt(sub, 10) > timeFormatOptions.maxMinutes) {\n\t                        sub = timeFormatOptions.maxMinutes + '';\n\t                    }\n\t                    break;\n\t                }\n\n\t                result += sub;\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return this.getFixedTimeString(result);\n\t    },\n\n\t    getFixedTimeString: function (value) {\n\t        var owner = this, timePattern = owner.timePattern, time = [],\n\t            secondIndex = 0, minuteIndex = 0, hourIndex = 0,\n\t            secondStartIndex = 0, minuteStartIndex = 0, hourStartIndex = 0,\n\t            second, minute, hour;\n\n\t        if (value.length === 6) {\n\t            timePattern.forEach(function (type, index) {\n\t                switch (type) {\n\t                case 's':\n\t                    secondIndex = index * 2;\n\t                    break;\n\t                case 'm':\n\t                    minuteIndex = index * 2;\n\t                    break;\n\t                case 'h':\n\t                    hourIndex = index * 2;\n\t                    break;\n\t                }\n\t            });\n\n\t            hourStartIndex = hourIndex;\n\t            minuteStartIndex = minuteIndex;\n\t            secondStartIndex = secondIndex;\n\n\t            second = parseInt(value.slice(secondStartIndex, secondStartIndex + 2), 10);\n\t            minute = parseInt(value.slice(minuteStartIndex, minuteStartIndex + 2), 10);\n\t            hour = parseInt(value.slice(hourStartIndex, hourStartIndex + 2), 10);\n\n\t            time = this.getFixedTime(hour, minute, second);\n\t        }\n\n\t        if (value.length === 4 && owner.timePattern.indexOf('s') < 0) {\n\t            timePattern.forEach(function (type, index) {\n\t                switch (type) {\n\t                case 'm':\n\t                    minuteIndex = index * 2;\n\t                    break;\n\t                case 'h':\n\t                    hourIndex = index * 2;\n\t                    break;\n\t                }\n\t            });\n\n\t            hourStartIndex = hourIndex;\n\t            minuteStartIndex = minuteIndex;\n\n\t            second = 0;\n\t            minute = parseInt(value.slice(minuteStartIndex, minuteStartIndex + 2), 10);\n\t            hour = parseInt(value.slice(hourStartIndex, hourStartIndex + 2), 10);\n\n\t            time = this.getFixedTime(hour, minute, second);\n\t        }\n\n\t        owner.time = time;\n\n\t        return time.length === 0 ? value : timePattern.reduce(function (previous, current) {\n\t            switch (current) {\n\t            case 's':\n\t                return previous + owner.addLeadingZero(time[2]);\n\t            case 'm':\n\t                return previous + owner.addLeadingZero(time[1]);\n\t            case 'h':\n\t                return previous + owner.addLeadingZero(time[0]);\n\t            }\n\t        }, '');\n\t    },\n\n\t    getFixedTime: function (hour, minute, second) {\n\t        second = Math.min(parseInt(second || 0, 10), 60);\n\t        minute = Math.min(minute, 60);\n\t        hour = Math.min(hour, 60);\n\n\t        return [hour, minute, second];\n\t    },\n\n\t    addLeadingZero: function (number) {\n\t        return (number < 10 ? '0' : '') + number;\n\t    }\n\t};\n\n\tmodule.exports = TimeFormatter;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar PhoneFormatter = function (formatter, delimiter) {\n\t    var owner = this;\n\n\t    owner.delimiter = (delimiter || delimiter === '') ? delimiter : ' ';\n\t    owner.delimiterRE = delimiter ? new RegExp('\\\\' + delimiter, 'g') : '';\n\n\t    owner.formatter = formatter;\n\t};\n\n\tPhoneFormatter.prototype = {\n\t    setFormatter: function (formatter) {\n\t        this.formatter = formatter;\n\t    },\n\n\t    format: function (phoneNumber) {\n\t        var owner = this;\n\n\t        owner.formatter.clear();\n\n\t        // only keep number and +\n\t        phoneNumber = phoneNumber.replace(/[^\\d+]/g, '');\n\n\t        // strip non-leading +\n\t        phoneNumber = phoneNumber.replace(/^\\+/, 'B').replace(/\\+/g, '').replace('B', '+');\n\n\t        // strip delimiter\n\t        phoneNumber = phoneNumber.replace(owner.delimiterRE, '');\n\n\t        var result = '', current, validated = false;\n\n\t        for (var i = 0, iMax = phoneNumber.length; i < iMax; i++) {\n\t            current = owner.formatter.inputDigit(phoneNumber.charAt(i));\n\n\t            // has ()- or space inside\n\t            if (/[\\s()-]/g.test(current)) {\n\t                result = current;\n\n\t                validated = true;\n\t            } else {\n\t                if (!validated) {\n\t                    result = current;\n\t                }\n\t                // else: over length input\n\t                // it turns to invalid number again\n\t            }\n\t        }\n\n\t        // strip ()\n\t        // e.g. US: 7161234567 returns (716) 123-4567\n\t        result = result.replace(/[()]/g, '');\n\t        // replace library delimiter with user customized delimiter\n\t        result = result.replace(/[\\s-]/g, owner.delimiter);\n\n\t        return result;\n\t    }\n\t};\n\n\tmodule.exports = PhoneFormatter;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar CreditCardDetector = {\n\t    blocks: {\n\t        uatp:          [4, 5, 6],\n\t        amex:          [4, 6, 5],\n\t        diners:        [4, 6, 4],\n\t        discover:      [4, 4, 4, 4],\n\t        mastercard:    [4, 4, 4, 4],\n\t        dankort:       [4, 4, 4, 4],\n\t        instapayment:  [4, 4, 4, 4],\n\t        jcb15:         [4, 6, 5],\n\t        jcb:           [4, 4, 4, 4],\n\t        maestro:       [4, 4, 4, 4],\n\t        visa:          [4, 4, 4, 4],\n\t        mir:           [4, 4, 4, 4],\n\t        unionPay:      [4, 4, 4, 4],\n\t        general:       [4, 4, 4, 4],\n\t        generalStrict: [4, 4, 4, 7]\n\t    },\n\n\t    re: {\n\t        // starts with 1; 15 digits, not starts with 1800 (jcb card)\n\t        uatp: /^(?!1800)1\\d{0,14}/,\n\n\t        // starts with 34/37; 15 digits\n\t        amex: /^3[47]\\d{0,13}/,\n\n\t        // starts with 6011/65/644-649; 16 digits\n\t        discover: /^(?:6011|65\\d{0,2}|64[4-9]\\d?)\\d{0,12}/,\n\n\t        // starts with 300-305/309 or 36/38/39; 14 digits\n\t        diners: /^3(?:0([0-5]|9)|[689]\\d?)\\d{0,11}/,\n\n\t        // starts with 51-55/2221–2720; 16 digits\n\t        mastercard: /^(5[1-5]\\d{0,2}|22[2-9]\\d{0,1}|2[3-7]\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 5019/4175/4571; 16 digits\n\t        dankort: /^(5019|4175|4571)\\d{0,12}/,\n\n\t        // starts with 637-639; 16 digits\n\t        instapayment: /^63[7-9]\\d{0,13}/,\n\n\t        // starts with 2131/1800; 15 digits\n\t        jcb15: /^(?:2131|1800)\\d{0,11}/,\n\n\t        // starts with 2131/1800/35; 16 digits\n\t        jcb: /^(?:35\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 50/56-58/6304/67; 16 digits\n\t        maestro: /^(?:5[0678]\\d{0,2}|6304|67\\d{0,2})\\d{0,12}/,\n\n\t        // starts with 22; 16 digits\n\t        mir: /^220[0-4]\\d{0,12}/,\n\n\t        // starts with 4; 16 digits\n\t        visa: /^4\\d{0,15}/,\n\n\t        // starts with 62; 16 digits\n\t        unionPay: /^62\\d{0,14}/\n\t    },\n\n\t    getInfo: function (value, strictMode) {\n\t        var blocks = CreditCardDetector.blocks,\n\t            re = CreditCardDetector.re;\n\n\t        // Some credit card can have up to 19 digits number.\n\t        // Set strictMode to true will remove the 16 max-length restrain,\n\t        // however, I never found any website validate card number like\n\t        // this, hence probably you don't want to enable this option.\n\t        strictMode = !!strictMode;\n\n\t        for (var key in re) {\n\t            if (re[key].test(value)) {\n\t                var block;\n\n\t                if (strictMode) {\n\t                    block = blocks.generalStrict;\n\t                } else {\n\t                    block = blocks[key];\n\t                }\n\n\t                return {\n\t                    type: key,\n\t                    blocks: block\n\t                };\n\t            }\n\t        }\n\n\t        return {\n\t            type:   'unknown',\n\t            blocks: strictMode ? blocks.generalStrict : blocks.general\n\t        };\n\t    }\n\t};\n\n\tmodule.exports = CreditCardDetector;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar Util = {\n\t    noop: function () {\n\t    },\n\n\t    strip: function (value, re) {\n\t        return value.replace(re, '');\n\t    },\n\n\t    getPostDelimiter: function (value, delimiter, delimiters) {\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            return value.slice(-delimiter.length) === delimiter ? delimiter : '';\n\t        }\n\n\t        // multiple delimiters\n\t        var matchedDelimiter = '';\n\t        delimiters.forEach(function (current) {\n\t            if (value.slice(-current.length) === current) {\n\t                matchedDelimiter = current;\n\t            }\n\t        });\n\n\t        return matchedDelimiter;\n\t    },\n\n\t    getDelimiterREByDelimiter: function (delimiter) {\n\t        return new RegExp(delimiter.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1'), 'g');\n\t    },\n\n\t    getNextCursorPosition: function (prevPos, oldValue, newValue, delimiter, delimiters) {\n\t      // If cursor was at the end of value, just place it back.\n\t      // Because new value could contain additional chars.\n\t      if (oldValue.length === prevPos) {\n\t          return newValue.length;\n\t      }\n\n\t      return prevPos + this.getPositionOffset(prevPos, oldValue, newValue, delimiter ,delimiters);\n\t    },\n\n\t    getPositionOffset: function (prevPos, oldValue, newValue, delimiter, delimiters) {\n\t        var oldRawValue, newRawValue, lengthOffset;\n\n\t        oldRawValue = this.stripDelimiters(oldValue.slice(0, prevPos), delimiter, delimiters);\n\t        newRawValue = this.stripDelimiters(newValue.slice(0, prevPos), delimiter, delimiters);\n\t        lengthOffset = oldRawValue.length - newRawValue.length;\n\n\t        return (lengthOffset !== 0) ? (lengthOffset / Math.abs(lengthOffset)) : 0;\n\t    },\n\n\t    stripDelimiters: function (value, delimiter, delimiters) {\n\t        var owner = this;\n\n\t        // single delimiter\n\t        if (delimiters.length === 0) {\n\t            var delimiterRE = delimiter ? owner.getDelimiterREByDelimiter(delimiter) : '';\n\n\t            return value.replace(delimiterRE, '');\n\t        }\n\n\t        // multiple delimiters\n\t        delimiters.forEach(function (current) {\n\t            current.split('').forEach(function (letter) {\n\t                value = value.replace(owner.getDelimiterREByDelimiter(letter), '');\n\t            });\n\t        });\n\n\t        return value;\n\t    },\n\n\t    headStr: function (str, length) {\n\t        return str.slice(0, length);\n\t    },\n\n\t    getMaxLength: function (blocks) {\n\t        return blocks.reduce(function (previous, current) {\n\t            return previous + current;\n\t        }, 0);\n\t    },\n\n\t    // strip prefix\n\t    // Before type  |   After type    |     Return value\n\t    // PEFIX-...    |   PEFIX-...     |     ''\n\t    // PREFIX-123   |   PEFIX-123     |     123\n\t    // PREFIX-123   |   PREFIX-23     |     23\n\t    // PREFIX-123   |   PREFIX-1234   |     1234\n\t    getPrefixStrippedValue: function (value, prefix, prefixLength, prevResult, delimiter, delimiters) {\n\t        // No prefix\n\t        if (prefixLength === 0) {\n\t          return value;\n\t        }\n\n\t        // Pre result has issue\n\t        // Revert to raw prefix\n\t        if (prevResult.slice(0, prefixLength) !== prefix) {\n\t          return '';\n\t        }\n\n\t        var prevValue = this.stripDelimiters(prevResult, delimiter, delimiters);\n\n\t        // New value has issue, someone typed in between prefix letters\n\t        // Revert to pre value\n\t        if (value.slice(0, prefixLength) !== prefix) {\n\t          return prevValue.slice(prefixLength);\n\t        }\n\n\t        // No issue, strip prefix for new value\n\t        return value.slice(prefixLength);\n\t    },\n\n\t    getFirstDiffIndex: function (prev, current) {\n\t        var index = 0;\n\n\t        while (prev.charAt(index) === current.charAt(index)) {\n\t            if (prev.charAt(index++) === '') {\n\t                return -1;\n\t            }\n\t        }\n\n\t        return index;\n\t    },\n\n\t    getFormattedValue: function (value, blocks, blocksLength, delimiter, delimiters, delimiterLazyShow) {\n\t        var result = '',\n\t            multipleDelimiters = delimiters.length > 0,\n\t            currentDelimiter;\n\n\t        // no options, normal input\n\t        if (blocksLength === 0) {\n\t            return value;\n\t        }\n\n\t        blocks.forEach(function (length, index) {\n\t            if (value.length > 0) {\n\t                var sub = value.slice(0, length),\n\t                    rest = value.slice(length);\n\n\t                if (multipleDelimiters) {\n\t                    currentDelimiter = delimiters[delimiterLazyShow ? (index - 1) : index] || currentDelimiter;\n\t                } else {\n\t                    currentDelimiter = delimiter;\n\t                }\n\n\t                if (delimiterLazyShow) {\n\t                    if (index > 0) {\n\t                        result += currentDelimiter;\n\t                    }\n\n\t                    result += sub;\n\t                } else {\n\t                    result += sub;\n\n\t                    if (sub.length === length && index < blocksLength - 1) {\n\t                        result += currentDelimiter;\n\t                    }\n\t                }\n\n\t                // update remaining string\n\t                value = rest;\n\t            }\n\t        });\n\n\t        return result;\n\t    },\n\n\t    // move cursor to the end\n\t    // the first time user focuses on an input with prefix\n\t    fixPrefixCursor: function (el, prefix, delimiter, delimiters) {\n\t        if (!el) {\n\t            return;\n\t        }\n\n\t        var val = el.value,\n\t            appendix = delimiter || (delimiters[0] || ' ');\n\n\t        if (!el.setSelectionRange || !prefix || (prefix.length + appendix.length) < val.length) {\n\t            return;\n\t        }\n\n\t        var len = val.length * 2;\n\n\t        // set timeout to avoid blink\n\t        setTimeout(function () {\n\t            el.setSelectionRange(len, len);\n\t        }, 1);\n\t    },\n\n\t    setSelection: function (element, position, doc) {\n\t        if (element !== this.getActiveElement(doc)) {\n\t            return;\n\t        }\n\n\t        // cursor is already in the end\n\t        if (element && element.value.length <= position) {\n\t          return;\n\t        }\n\n\t        if (element.createTextRange) {\n\t            var range = element.createTextRange();\n\n\t            range.move('character', position);\n\t            range.select();\n\t        } else {\n\t            try {\n\t                element.setSelectionRange(position, position);\n\t            } catch (e) {\n\t                // eslint-disable-next-line\n\t                console.warn('The input element type does not support selection');\n\t            }\n\t        }\n\t    },\n\n\t    getActiveElement: function(parent) {\n\t        var activeElement = parent.activeElement;\n\t        if (activeElement && activeElement.shadowRoot) {\n\t            return this.getActiveElement(activeElement.shadowRoot);\n\t        }\n\t        return activeElement;\n\t    },\n\n\t    isAndroid: function () {\n\t        return navigator && /android/i.test(navigator.userAgent);\n\t    },\n\n\t    // On Android chrome, the keyup and keydown events\n\t    // always return key code 229 as a composition that\n\t    // buffers the user’s keystrokes\n\t    // see https://github.com/nosir/cleave.js/issues/147\n\t    isAndroidBackspaceKeydown: function (lastInputValue, currentInputValue) {\n\t        if (!this.isAndroid() || !lastInputValue || !currentInputValue) {\n\t            return false;\n\t        }\n\n\t        return currentInputValue === lastInputValue.slice(0, -1);\n\t    }\n\t};\n\n\tmodule.exports = Util;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\n\t/**\n\t * Props Assignment\n\t *\n\t * Separate this, so react module can share the usage\n\t */\n\tvar DefaultProperties = {\n\t    // Maybe change to object-assign\n\t    // for now just keep it as simple\n\t    assign: function (target, opts) {\n\t        target = target || {};\n\t        opts = opts || {};\n\n\t        // credit card\n\t        target.creditCard = !!opts.creditCard;\n\t        target.creditCardStrictMode = !!opts.creditCardStrictMode;\n\t        target.creditCardType = '';\n\t        target.onCreditCardTypeChanged = opts.onCreditCardTypeChanged || (function () {});\n\n\t        // phone\n\t        target.phone = !!opts.phone;\n\t        target.phoneRegionCode = opts.phoneRegionCode || 'AU';\n\t        target.phoneFormatter = {};\n\n\t        // time\n\t        target.time = !!opts.time;\n\t        target.timePattern = opts.timePattern || ['h', 'm', 's'];\n\t        target.timeFormat = opts.timeFormat || '24';\n\t        target.timeFormatter = {};\n\n\t        // date\n\t        target.date = !!opts.date;\n\t        target.datePattern = opts.datePattern || ['d', 'm', 'Y'];\n\t        target.dateFormatter = {};\n\n\t        // numeral\n\t        target.numeral = !!opts.numeral;\n\t        target.numeralIntegerScale = opts.numeralIntegerScale > 0 ? opts.numeralIntegerScale : 0;\n\t        target.numeralDecimalScale = opts.numeralDecimalScale >= 0 ? opts.numeralDecimalScale : 2;\n\t        target.numeralDecimalMark = opts.numeralDecimalMark || '.';\n\t        target.numeralThousandsGroupStyle = opts.numeralThousandsGroupStyle || 'thousand';\n\t        target.numeralPositiveOnly = !!opts.numeralPositiveOnly;\n\t        target.stripLeadingZeroes = opts.stripLeadingZeroes !== false;\n\n\t        // others\n\t        target.numericOnly = target.creditCard || target.date || !!opts.numericOnly;\n\n\t        target.uppercase = !!opts.uppercase;\n\t        target.lowercase = !!opts.lowercase;\n\n\t        target.prefix = (target.creditCard || target.date) ? '' : (opts.prefix || '');\n\t        target.noImmediatePrefix = !!opts.noImmediatePrefix;\n\t        target.prefixLength = target.prefix.length;\n\t        target.rawValueTrimPrefix = !!opts.rawValueTrimPrefix;\n\t        target.copyDelimiter = !!opts.copyDelimiter;\n\n\t        target.initValue = (opts.initValue !== undefined && opts.initValue !== null) ? opts.initValue.toString() : '';\n\n\t        target.delimiter =\n\t            (opts.delimiter || opts.delimiter === '') ? opts.delimiter :\n\t                (opts.date ? '/' :\n\t                    (opts.time ? ':' :\n\t                        (opts.numeral ? ',' :\n\t                            (opts.phone ? ' ' :\n\t                                ' '))));\n\t        target.delimiterLength = target.delimiter.length;\n\t        target.delimiterLazyShow = !!opts.delimiterLazyShow;\n\t        target.delimiters = opts.delimiters || [];\n\n\t        target.blocks = opts.blocks || [];\n\t        target.blocksLength = target.blocks.length;\n\n\t        target.root = (typeof global === 'object' && global) ? global : window;\n\t        target.document = opts.document || target.root.document;\n\n\t        target.maxLength = 0;\n\n\t        target.backspace = false;\n\t        target.result = '';\n\n\t        target.onValueChanged = opts.onValueChanged || (function () {});\n\n\t        return target;\n\t    }\n\t};\n\n\tmodule.exports = DefaultProperties;\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ })\n/******/ ])\n});\n;"],"sourceRoot":""}