((typeof self !== 'undefined' ? self : this)["webpackJsonp_name_"] = (typeof self !== 'undefined' ? self : this)["webpackJsonp_name_"] || []).push([["type-helpers-edit_buttons"],{

/***/ "./src/scripts/modules/types/helpers/create_icon.js":
/*!**********************************************************!*\
  !*** ./src/scripts/modules/types/helpers/create_icon.js ***!
  \**********************************************************/
/*! exports provided: createIcon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createIcon", function() { return createIcon; });
/* harmony import */ var element_r__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! element-r */ "../Element-R/build/elementr.min.js");
/* harmony import */ var element_r__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(element_r__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils */ "./src/scripts/utils/index.js");
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var div = element_r__WEBPACK_IMPORTED_MODULE_0__["elements"].div,
    span = element_r__WEBPACK_IMPORTED_MODULE_0__["elements"].span,
    a = element_r__WEBPACK_IMPORTED_MODULE_0__["elements"].a,
    style = element_r__WEBPACK_IMPORTED_MODULE_0__["elements"].style;

var iconStyles = function iconStyles() {
  var stylId = Object(_utils__WEBPACK_IMPORTED_MODULE_1__["uuid"])();
  var classes = {
    wrapper: "wrapper-".concat(stylId),
    icon: "icon-".concat(stylId),
    text: "text-".concat(stylId)
  };
  var styles = style("\n    .icon-wrapper.".concat(classes.wrapper, " {\n      \n    }\n    .icon-wrapper.").concat(classes.wrapper, " > a.").concat(classes.icon, " {\n      \n    }\n    .icon-wrapper.").concat(classes.wrapper, " > a.").concat(classes.icon, " > .icon-text.").concat(classes.text, " {\n      \n    }\n  "));
  return {
    classes: classes,
    styles: styles
  };
};

var createIcon = function createIcon(name, text) {
  var extraProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  var _iconStyles = iconStyles(),
      classes = _iconStyles.classes,
      styles = _iconStyles.styles;

  var props = {
    wrapper: _objectSpread({
      className: "icon-wrapper ".concat(classes.wrapper)
    }, extraProps.wrapper),
    icon: _objectSpread({
      className: "icon-".concat(name, " fa fa-").concat(name, " ").concat(classes.icon),
      href: 'javascript:void(0);',
      title: text || name
    }, extraProps.icon),
    text: _objectSpread({
      className: "icon-text ".concat(classes.text)
    }, extraProps.text)
  };
  var children = text ? [styles, a(props.icon, span(props.text, text))] : [styles, a(props.icon)];
  return span(props.wrapper, children);
};

/***/ }),

/***/ "./src/scripts/modules/types/helpers/edit_buttons.js":
/*!***********************************************************!*\
  !*** ./src/scripts/modules/types/helpers/edit_buttons.js ***!
  \***********************************************************/
/*! exports provided: createEditBtns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createEditBtns", function() { return createEditBtns; });
/* harmony import */ var element_r__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! element-r */ "../Element-R/build/elementr.min.js");
/* harmony import */ var element_r__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(element_r__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _create_icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create_icon */ "./src/scripts/modules/types/helpers/create_icon.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils */ "./src/scripts/utils/index.js");
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }




var div = element_r__WEBPACK_IMPORTED_MODULE_0__["elements"].div,
    style = element_r__WEBPACK_IMPORTED_MODULE_0__["elements"].style;

var btnStyles = function btnStyles() {
  var stylId = Object(_utils__WEBPACK_IMPORTED_MODULE_2__["uuid"])();
  var classes = {
    wrapper: "wrapper-".concat(stylId),
    btns: "btns-".concat(stylId)
  };
  var styles = style("\n    div.edit-btns-wrapper.".concat(classes.wrapper, " {\n      position: relative;\n    }\n    div.edit-btns-wrapper.").concat(classes.wrapper, " > div.").concat(classes.btns, " {\n      position: absolute;\n      top: 0;\n      right: 0;\n    }\n  "));
  return {
    classes: classes,
    styles: styles
  };
};

var btnTypes = {
  edit: 'pen',
  drag: 'hand-point-up',
  "delete": 'trash-alt'
};

var buildIcon = function buildIcon(action, type, id) {
  return action ? Object(_create_icon__WEBPACK_IMPORTED_MODULE_1__["createIcon"])(btnTypes[type], "".concat(type[0].toUpperCase()).concat(type.slice(1)), {
    icon: {
      id: id,
      onclick: action
    }
  }) : '';
};

var buildActions = function buildActions(id, props) {
  return Object.keys(btnTypes).reduce(function (actions, key) {
    props[key] && actions.push(buildIcon(props[key], key, id));
    return actions;
  }, []);
};

var createEditBtns = function createEditBtns() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  if (!props.id) return [];
  var id = props.id;

  var _btnStyles = btnStyles(id),
      classes = _btnStyles.classes,
      styles = _btnStyles.styles;

  return [styles, div({
    className: "".concat(classes.wrapper, " edit-btns-wrapper")
  }, [div({
    className: "".concat(classes.btns, " edit-btns")
  }, _toConsumableArray(buildActions(id, props)))])];
};

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,