((typeof self !== 'undefined' ? self : this)["webpackJsonp_name_"] = (typeof self !== 'undefined' ? self : this)["webpackJsonp_name_"] || []).push([["render-js~render-js-collection~render-js-map~render-js-number~render-js-string~type-definitions~type~694823e9"],{

/***/ "../Element-R/build/elementr.min.js":
/*!******************************************!*\
  !*** ../Element-R/build/elementr.min.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
  if (true) module.exports = factory();else {}
})(typeof self !== 'undefined' ? self : this, function () {
  return (
    /******/
    function (modules) {
      // webpackBootstrap

      /******/
      // The module cache

      /******/
      var installedModules = {};
      /******/

      /******/
      // The require function

      /******/

      function __webpack_require__(moduleId) {
        /******/

        /******/
        // Check if module is in cache

        /******/
        if (installedModules[moduleId]) {
          /******/
          return installedModules[moduleId].exports;
          /******/
        }
        /******/
        // Create a new module (and put it into the cache)

        /******/


        var module = installedModules[moduleId] = {
          /******/
          i: moduleId,

          /******/
          l: false,

          /******/
          exports: {}
          /******/

        };
        /******/

        /******/
        // Execute the module function

        /******/

        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        /******/

        /******/
        // Flag the module as loaded

        /******/

        module.l = true;
        /******/

        /******/
        // Return the exports of the module

        /******/

        return module.exports;
        /******/
      }
      /******/

      /******/

      /******/
      // expose the modules object (__webpack_modules__)

      /******/


      __webpack_require__.m = modules;
      /******/

      /******/
      // expose the module cache

      /******/

      __webpack_require__.c = installedModules;
      /******/

      /******/
      // define getter function for harmony exports

      /******/

      __webpack_require__.d = function (exports, name, getter) {
        /******/
        if (!__webpack_require__.o(exports, name)) {
          /******/
          Object.defineProperty(exports, name, {
            enumerable: true,
            get: getter
          });
          /******/
        }
        /******/

      };
      /******/

      /******/
      // define __esModule on exports

      /******/


      __webpack_require__.r = function (exports) {
        /******/
        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
          /******/
          Object.defineProperty(exports, Symbol.toStringTag, {
            value: 'Module'
          });
          /******/
        }
        /******/


        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        /******/
      };
      /******/

      /******/
      // create a fake namespace object

      /******/
      // mode & 1: value is a module id, require it

      /******/
      // mode & 2: merge all properties of value into the ns

      /******/
      // mode & 4: return value when already ns object

      /******/
      // mode & 8|1: behave like require

      /******/


      __webpack_require__.t = function (value, mode) {
        /******/
        if (mode & 1) value = __webpack_require__(value);
        /******/

        if (mode & 8) return value;
        /******/

        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;
        /******/

        var ns = Object.create(null);
        /******/

        __webpack_require__.r(ns);
        /******/


        Object.defineProperty(ns, 'default', {
          enumerable: true,
          value: value
        });
        /******/

        if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {
          return value[key];
        }.bind(null, key));
        /******/

        return ns;
        /******/
      };
      /******/

      /******/
      // getDefaultExport function for compatibility with non-harmony modules

      /******/


      __webpack_require__.n = function (module) {
        /******/
        var getter = module && module.__esModule ?
        /******/
        function getDefault() {
          return module['default'];
        } :
        /******/
        function getModuleExports() {
          return module;
        };
        /******/

        __webpack_require__.d(getter, 'a', getter);
        /******/


        return getter;
        /******/
      };
      /******/

      /******/
      // Object.prototype.hasOwnProperty.call

      /******/


      __webpack_require__.o = function (object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      };
      /******/

      /******/
      // __webpack_public_path__

      /******/


      __webpack_require__.p = "";
      /******/

      /******/

      /******/
      // Load entry module and return exports

      /******/

      return __webpack_require__(__webpack_require__.s = "./src/scripts/index.js");
      /******/
    }(
    /************************************************************************/

    /******/
    {
      /***/
      "./node_modules/lodash.clonedeep/index.js":
      /*!************************************************!*\
        !*** ./node_modules/lodash.clonedeep/index.js ***!
        \************************************************/

      /*! no static exports found */

      /***/
      function (module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */
        (function (global, module) {
          var LARGE_ARRAY_SIZE = 200;
          var HASH_UNDEFINED = '__lodash_hash_undefined__';
          var MAX_SAFE_INTEGER = 9007199254740991;
          var argsTag = '[object Arguments]',
              arrayTag = '[object Array]',
              boolTag = '[object Boolean]',
              dateTag = '[object Date]',
              errorTag = '[object Error]',
              funcTag = '[object Function]',
              genTag = '[object GeneratorFunction]',
              mapTag = '[object Map]',
              numberTag = '[object Number]',
              objectTag = '[object Object]',
              promiseTag = '[object Promise]',
              regexpTag = '[object RegExp]',
              setTag = '[object Set]',
              stringTag = '[object String]',
              symbolTag = '[object Symbol]',
              weakMapTag = '[object WeakMap]';
          var arrayBufferTag = '[object ArrayBuffer]',
              dataViewTag = '[object DataView]',
              float32Tag = '[object Float32Array]',
              float64Tag = '[object Float64Array]',
              int8Tag = '[object Int8Array]',
              int16Tag = '[object Int16Array]',
              int32Tag = '[object Int32Array]',
              uint8Tag = '[object Uint8Array]',
              uint8ClampedTag = '[object Uint8ClampedArray]',
              uint16Tag = '[object Uint16Array]',
              uint32Tag = '[object Uint32Array]';
          var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
          var reFlags = /\w*$/;
          var reIsHostCtor = /^\[object .+?Constructor\]$/;
          var reIsUint = /^(?:0|[1-9]\d*)$/;
          var cloneableTags = {};
          cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
          cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
          var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;
          var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
          var root = freeGlobal || freeSelf || Function('return this')();
          var freeExports =  true && exports && !exports.nodeType && exports;
          var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;
          var moduleExports = freeModule && freeModule.exports === freeExports;

          function addMapEntry(map, pair) {
            map.set(pair[0], pair[1]);
            return map;
          }

          function addSetEntry(set, value) {
            set.add(value);
            return set;
          }

          function arrayEach(array, iteratee) {
            var index = -1,
                length = array ? array.length : 0;

            while (++index < length) {
              if (iteratee(array[index], index, array) === false) {
                break;
              }
            }

            return array;
          }

          function arrayPush(array, values) {
            var index = -1,
                length = values.length,
                offset = array.length;

            while (++index < length) {
              array[offset + index] = values[index];
            }

            return array;
          }

          function arrayReduce(array, iteratee, accumulator, initAccum) {
            var index = -1,
                length = array ? array.length : 0;

            if (initAccum && length) {
              accumulator = array[++index];
            }

            while (++index < length) {
              accumulator = iteratee(accumulator, array[index], index, array);
            }

            return accumulator;
          }

          function baseTimes(n, iteratee) {
            var index = -1,
                result = Array(n);

            while (++index < n) {
              result[index] = iteratee(index);
            }

            return result;
          }

          function getValue(object, key) {
            return object == null ? undefined : object[key];
          }

          function isHostObject(value) {
            var result = false;

            if (value != null && typeof value.toString != 'function') {
              try {
                result = !!(value + '');
              } catch (e) {}
            }

            return result;
          }

          function mapToArray(map) {
            var index = -1,
                result = Array(map.size);
            map.forEach(function (value, key) {
              result[++index] = [key, value];
            });
            return result;
          }

          function overArg(func, transform) {
            return function (arg) {
              return func(transform(arg));
            };
          }

          function setToArray(set) {
            var index = -1,
                result = Array(set.size);
            set.forEach(function (value) {
              result[++index] = value;
            });
            return result;
          }

          var arrayProto = Array.prototype,
              funcProto = Function.prototype,
              objectProto = Object.prototype;
          var coreJsData = root['__core-js_shared__'];

          var maskSrcKey = function () {
            var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
            return uid ? 'Symbol(src)_1.' + uid : '';
          }();

          var funcToString = funcProto.toString;
          var hasOwnProperty = objectProto.hasOwnProperty;
          var objectToString = objectProto.toString;
          var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
          var Buffer = moduleExports ? root.Buffer : undefined,
              Symbol = root.Symbol,
              Uint8Array = root.Uint8Array,
              getPrototype = overArg(Object.getPrototypeOf, Object),
              objectCreate = Object.create,
              propertyIsEnumerable = objectProto.propertyIsEnumerable,
              splice = arrayProto.splice;
          var nativeGetSymbols = Object.getOwnPropertySymbols,
              nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
              nativeKeys = overArg(Object.keys, Object);
          var DataView = getNative(root, 'DataView'),
              Map = getNative(root, 'Map'),
              Promise = getNative(root, 'Promise'),
              Set = getNative(root, 'Set'),
              WeakMap = getNative(root, 'WeakMap'),
              nativeCreate = getNative(Object, 'create');
          var dataViewCtorString = toSource(DataView),
              mapCtorString = toSource(Map),
              promiseCtorString = toSource(Promise),
              setCtorString = toSource(Set),
              weakMapCtorString = toSource(WeakMap);
          var symbolProto = Symbol ? Symbol.prototype : undefined,
              symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

          function Hash(entries) {
            var index = -1,
                length = entries ? entries.length : 0;
            this.clear();

            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }

          function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {};
          }

          function hashDelete(key) {
            return this.has(key) && delete this.__data__[key];
          }

          function hashGet(key) {
            var data = this.__data__;

            if (nativeCreate) {
              var result = data[key];
              return result === HASH_UNDEFINED ? undefined : result;
            }

            return hasOwnProperty.call(data, key) ? data[key] : undefined;
          }

          function hashHas(key) {
            var data = this.__data__;
            return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
          }

          function hashSet(key, value) {
            var data = this.__data__;
            data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
            return this;
          }

          Hash.prototype.clear = hashClear;
          Hash.prototype['delete'] = hashDelete;
          Hash.prototype.get = hashGet;
          Hash.prototype.has = hashHas;
          Hash.prototype.set = hashSet;

          function ListCache(entries) {
            var index = -1,
                length = entries ? entries.length : 0;
            this.clear();

            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }

          function listCacheClear() {
            this.__data__ = [];
          }

          function listCacheDelete(key) {
            var data = this.__data__,
                index = assocIndexOf(data, key);

            if (index < 0) {
              return false;
            }

            var lastIndex = data.length - 1;

            if (index == lastIndex) {
              data.pop();
            } else {
              splice.call(data, index, 1);
            }

            return true;
          }

          function listCacheGet(key) {
            var data = this.__data__,
                index = assocIndexOf(data, key);
            return index < 0 ? undefined : data[index][1];
          }

          function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
          }

          function listCacheSet(key, value) {
            var data = this.__data__,
                index = assocIndexOf(data, key);

            if (index < 0) {
              data.push([key, value]);
            } else {
              data[index][1] = value;
            }

            return this;
          }

          ListCache.prototype.clear = listCacheClear;
          ListCache.prototype['delete'] = listCacheDelete;
          ListCache.prototype.get = listCacheGet;
          ListCache.prototype.has = listCacheHas;
          ListCache.prototype.set = listCacheSet;

          function MapCache(entries) {
            var index = -1,
                length = entries ? entries.length : 0;
            this.clear();

            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }

          function mapCacheClear() {
            this.__data__ = {
              'hash': new Hash(),
              'map': new (Map || ListCache)(),
              'string': new Hash()
            };
          }

          function mapCacheDelete(key) {
            return getMapData(this, key)['delete'](key);
          }

          function mapCacheGet(key) {
            return getMapData(this, key).get(key);
          }

          function mapCacheHas(key) {
            return getMapData(this, key).has(key);
          }

          function mapCacheSet(key, value) {
            getMapData(this, key).set(key, value);
            return this;
          }

          MapCache.prototype.clear = mapCacheClear;
          MapCache.prototype['delete'] = mapCacheDelete;
          MapCache.prototype.get = mapCacheGet;
          MapCache.prototype.has = mapCacheHas;
          MapCache.prototype.set = mapCacheSet;

          function Stack(entries) {
            this.__data__ = new ListCache(entries);
          }

          function stackClear() {
            this.__data__ = new ListCache();
          }

          function stackDelete(key) {
            return this.__data__['delete'](key);
          }

          function stackGet(key) {
            return this.__data__.get(key);
          }

          function stackHas(key) {
            return this.__data__.has(key);
          }

          function stackSet(key, value) {
            var cache = this.__data__;

            if (cache instanceof ListCache) {
              var pairs = cache.__data__;

              if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                pairs.push([key, value]);
                return this;
              }

              cache = this.__data__ = new MapCache(pairs);
            }

            cache.set(key, value);
            return this;
          }

          Stack.prototype.clear = stackClear;
          Stack.prototype['delete'] = stackDelete;
          Stack.prototype.get = stackGet;
          Stack.prototype.has = stackHas;
          Stack.prototype.set = stackSet;

          function arrayLikeKeys(value, inherited) {
            var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];
            var length = result.length,
                skipIndexes = !!length;

            for (var key in value) {
              if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
                result.push(key);
              }
            }

            return result;
          }

          function assignValue(object, key, value) {
            var objValue = object[key];

            if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {
              object[key] = value;
            }
          }

          function assocIndexOf(array, key) {
            var length = array.length;

            while (length--) {
              if (eq(array[length][0], key)) {
                return length;
              }
            }

            return -1;
          }

          function baseAssign(object, source) {
            return object && copyObject(source, keys(source), object);
          }

          function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
            var result;

            if (customizer) {
              result = object ? customizer(value, key, object, stack) : customizer(value);
            }

            if (result !== undefined) {
              return result;
            }

            if (!isObject(value)) {
              return value;
            }

            var isArr = isArray(value);

            if (isArr) {
              result = initCloneArray(value);

              if (!isDeep) {
                return copyArray(value, result);
              }
            } else {
              var tag = getTag(value),
                  isFunc = tag == funcTag || tag == genTag;

              if (isBuffer(value)) {
                return cloneBuffer(value, isDeep);
              }

              if (tag == objectTag || tag == argsTag || isFunc && !object) {
                if (isHostObject(value)) {
                  return object ? value : {};
                }

                result = initCloneObject(isFunc ? {} : value);

                if (!isDeep) {
                  return copySymbols(value, baseAssign(result, value));
                }
              } else {
                if (!cloneableTags[tag]) {
                  return object ? value : {};
                }

                result = initCloneByTag(value, tag, baseClone, isDeep);
              }
            }

            stack || (stack = new Stack());
            var stacked = stack.get(value);

            if (stacked) {
              return stacked;
            }

            stack.set(value, result);

            if (!isArr) {
              var props = isFull ? getAllKeys(value) : keys(value);
            }

            arrayEach(props || value, function (subValue, key) {
              if (props) {
                key = subValue;
                subValue = value[key];
              }

              assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
            });
            return result;
          }

          function baseCreate(proto) {
            return isObject(proto) ? objectCreate(proto) : {};
          }

          function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result = keysFunc(object);
            return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
          }

          function baseGetTag(value) {
            return objectToString.call(value);
          }

          function baseIsNative(value) {
            if (!isObject(value) || isMasked(value)) {
              return false;
            }

            var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
            return pattern.test(toSource(value));
          }

          function baseKeys(object) {
            if (!isPrototype(object)) {
              return nativeKeys(object);
            }

            var result = [];

            for (var key in Object(object)) {
              if (hasOwnProperty.call(object, key) && key != 'constructor') {
                result.push(key);
              }
            }

            return result;
          }

          function cloneBuffer(buffer, isDeep) {
            if (isDeep) {
              return buffer.slice();
            }

            var result = new buffer.constructor(buffer.length);
            buffer.copy(result);
            return result;
          }

          function cloneArrayBuffer(arrayBuffer) {
            var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
            new Uint8Array(result).set(new Uint8Array(arrayBuffer));
            return result;
          }

          function cloneDataView(dataView, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
            return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
          }

          function cloneMap(map, isDeep, cloneFunc) {
            var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
            return arrayReduce(array, addMapEntry, new map.constructor());
          }

          function cloneRegExp(regexp) {
            var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
            result.lastIndex = regexp.lastIndex;
            return result;
          }

          function cloneSet(set, isDeep, cloneFunc) {
            var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
            return arrayReduce(array, addSetEntry, new set.constructor());
          }

          function cloneSymbol(symbol) {
            return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
          }

          function cloneTypedArray(typedArray, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
            return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
          }

          function copyArray(source, array) {
            var index = -1,
                length = source.length;
            array || (array = Array(length));

            while (++index < length) {
              array[index] = source[index];
            }

            return array;
          }

          function copyObject(source, props, object, customizer) {
            object || (object = {});
            var index = -1,
                length = props.length;

            while (++index < length) {
              var key = props[index];
              var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
              assignValue(object, key, newValue === undefined ? source[key] : newValue);
            }

            return object;
          }

          function copySymbols(source, object) {
            return copyObject(source, getSymbols(source), object);
          }

          function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols);
          }

          function getMapData(map, key) {
            var data = map.__data__;
            return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
          }

          function getNative(object, key) {
            var value = getValue(object, key);
            return baseIsNative(value) ? value : undefined;
          }

          var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;
          var getTag = baseGetTag;

          if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
            getTag = function (value) {
              var result = objectToString.call(value),
                  Ctor = result == objectTag ? value.constructor : undefined,
                  ctorString = Ctor ? toSource(Ctor) : undefined;

              if (ctorString) {
                switch (ctorString) {
                  case dataViewCtorString:
                    return dataViewTag;

                  case mapCtorString:
                    return mapTag;

                  case promiseCtorString:
                    return promiseTag;

                  case setCtorString:
                    return setTag;

                  case weakMapCtorString:
                    return weakMapTag;
                }
              }

              return result;
            };
          }

          function initCloneArray(array) {
            var length = array.length,
                result = array.constructor(length);

            if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
              result.index = array.index;
              result.input = array.input;
            }

            return result;
          }

          function initCloneObject(object) {
            return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
          }

          function initCloneByTag(object, tag, cloneFunc, isDeep) {
            var Ctor = object.constructor;

            switch (tag) {
              case arrayBufferTag:
                return cloneArrayBuffer(object);

              case boolTag:
              case dateTag:
                return new Ctor(+object);

              case dataViewTag:
                return cloneDataView(object, isDeep);

              case float32Tag:
              case float64Tag:
              case int8Tag:
              case int16Tag:
              case int32Tag:
              case uint8Tag:
              case uint8ClampedTag:
              case uint16Tag:
              case uint32Tag:
                return cloneTypedArray(object, isDeep);

              case mapTag:
                return cloneMap(object, isDeep, cloneFunc);

              case numberTag:
              case stringTag:
                return new Ctor(object);

              case regexpTag:
                return cloneRegExp(object);

              case setTag:
                return cloneSet(object, isDeep, cloneFunc);

              case symbolTag:
                return cloneSymbol(object);
            }
          }

          function isIndex(value, length) {
            length = length == null ? MAX_SAFE_INTEGER : length;
            return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
          }

          function isKeyable(value) {
            var type = typeof value;
            return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
          }

          function isMasked(func) {
            return !!maskSrcKey && maskSrcKey in func;
          }

          function isPrototype(value) {
            var Ctor = value && value.constructor,
                proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;
            return value === proto;
          }

          function toSource(func) {
            if (func != null) {
              try {
                return funcToString.call(func);
              } catch (e) {}

              try {
                return func + '';
              } catch (e) {}
            }

            return '';
          }

          function cloneDeep(value) {
            return baseClone(value, true, true);
          }

          function eq(value, other) {
            return value === other || value !== value && other !== other;
          }

          function isArguments(value) {
            return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
          }

          var isArray = Array.isArray;

          function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction(value);
          }

          function isArrayLikeObject(value) {
            return isObjectLike(value) && isArrayLike(value);
          }

          var isBuffer = nativeIsBuffer || stubFalse;

          function isFunction(value) {
            var tag = isObject(value) ? objectToString.call(value) : '';
            return tag == funcTag || tag == genTag;
          }

          function isLength(value) {
            return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
          }

          function isObject(value) {
            var type = typeof value;
            return !!value && (type == 'object' || type == 'function');
          }

          function isObjectLike(value) {
            return !!value && typeof value == 'object';
          }

          function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
          }

          function stubArray() {
            return [];
          }

          function stubFalse() {
            return false;
          }

          module.exports = cloneDeep;
          /* WEBPACK VAR INJECTION */
        }).call(this, __webpack_require__(
        /*! ./../webpack/buildin/global.js */
        "./node_modules/webpack/buildin/global.js"), __webpack_require__(
        /*! ./../webpack/buildin/module.js */
        "./node_modules/webpack/buildin/module.js")(module));
        /***/
      },

      /***/
      "./node_modules/webpack/buildin/global.js":
      /*!***********************************!*\
        !*** (webpack)/buildin/global.js ***!
        \***********************************/

      /*! no static exports found */

      /***/
      function (module, exports) {
        var g;

        g = function () {
          return this;
        }();

        try {
          g = g || new Function("return this")();
        } catch (e) {
          if (typeof window === "object") g = window;
        }

        module.exports = g;
        /***/
      },

      /***/
      "./node_modules/webpack/buildin/module.js":
      /*!***********************************!*\
        !*** (webpack)/buildin/module.js ***!
        \***********************************/

      /*! no static exports found */

      /***/
      function (module, exports) {
        module.exports = function (module) {
          if (!module.webpackPolyfill) {
            module.deprecate = function () {};

            module.paths = [];
            if (!module.children) module.children = [];
            Object.defineProperty(module, "loaded", {
              enumerable: true,
              get: function () {
                return module.l;
              }
            });
            Object.defineProperty(module, "id", {
              enumerable: true,
              get: function () {
                return module.i;
              }
            });
            module.webpackPolyfill = 1;
          }

          return module;
        };
        /***/

      },

      /***/
      "./src/scripts/elementr/index.js":
      /*!***************************************!*\
        !*** ./src/scripts/elementr/index.js ***!
        \***************************************/

      /*! exports provided: elements, eR */

      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        "use strict";

        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "elements", function () {
          return elements;
        });
        /* harmony export (binding) */


        __webpack_require__.d(__webpack_exports__, "eR", function () {
          return eR;
        });

        function _typeof(obj) {
          if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            _typeof = function _typeof(obj) {
              return typeof obj;
            };
          } else {
            _typeof = function _typeof(obj) {
              return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            };
          }

          return _typeof(obj);
        }

        var ATTR_EXCEPTIONS = ['role', 'dataset', 'd', 'r', 'cx', 'cy', 'width', 'height', 'viewBox', 'fill'];
        var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
        var PROPS_TYPES = ['string', 'number', 'object'];
        var NO_EL_TYPES = ['string', 'number', 'boolean'];

        var appendText = function appendText(el, text) {
          return el && (text || text === false) && el.appendChild(document.createTextNode(text));
        };

        var appendArray = function appendArray(el, children) {
          return children.map(function (child) {
            return Array.isArray(child) ? appendArray(el, child) : child instanceof window.Element ? el.appendChild(child) : NO_EL_TYPES.includes(_typeof(child)) ? appendText(el, child) : null;
          });
        };

        var setStyles = function setStyles(el, styles) {
          return !styles ? el.removeAttribute("styles") : Object.keys(styles).map(function (styleName) {
            return styleName in el.style ? el.style[styleName] = styles[styleName] : console.warn("".concat(styleName, " is not a valid style for a <").concat(el.tagName.toLowerCase(), ">"));
          });
        };

        var setDataAttributes = function setDataAttributes(el, dataAttrs) {
          return Object.keys(dataAttrs).map(function (dataAttr) {
            el.setAttribute("data-".concat(dataAttr), dataAttrs[dataAttr]);
          });
        };

        var mapProps = function mapProps(el, props) {
          return Object.keys(props).map(function (prop) {
            var value = props[prop];
            if (props[prop] === undefined || props[prop] === null) return;
            if (prop === 'for') prop = 'htmlFor';
            if (prop === 'class') prop = 'className';
            if (prop.indexOf('on') === 0) prop = prop.toLowerCase();
            if (!(prop in el) && !ATTR_EXCEPTIONS.includes(prop)) return null;

            switch (prop) {
              case 'style':
                return setStyles(el, value);

              case 'dataset':
                return setDataAttributes(el, value);

              case 'htmlFor':
              case 'className':
                return el[prop] = value;

              default:
                return typeof value === "function" && prop.indexOf('on') === 0 ? el[prop] = value : value && el.setAttribute(prop, value);
            }
          });
        };

        var isSvg = function isSvg(type) {
          return ["path", "svg", "circle"].includes(type);
        };

        var makeProps = function makeProps(el, props, propsType) {
          return propsType === "string" || propsType === "number" ? appendText(el, props) : Array.isArray(props) ? appendArray(el, props) : props instanceof window.Element ? el.appendChild(props) : mapProps(el, props);
        };

        var makeEl = function makeEl(type) {
          return isSvg(type) ? document.createElementNS(SVG_NAMESPACE, type) : document.createElement(type);
        };

        var eR = function eR(type, props) {
          var el = makeEl(type);

          var propsType = _typeof(props);

          PROPS_TYPES.includes(propsType) && makeProps(el, props, propsType);

          for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
            children[_key - 2] = arguments[_key];
          }

          children && appendArray(el, children);
          return el;
        };

        var elements = ['a', 'b', 'br', 'button', 'circle', 'footer', 'form', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'i', 'input', 'label', 'link', 'li', 'nav', 'ol', 'option', 'p', 'path', 'select', 'span', 'style', 'svg', 'textarea', 'u', 'ul'].reduce(function (els, type) {
          return (els[type] = function () {
            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              args[_key2] = arguments[_key2];
            }

            return eR.apply(void 0, [type].concat(args));
          }) && els;
        }, {});
        /***/
      },

      /***/
      "./src/scripts/index.js":
      /*!******************************!*\
        !*** ./src/scripts/index.js ***!
        \******************************/

      /*! exports provided: elements, eR, constants, createStore, dispatcher */

      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        "use strict";

        __webpack_require__.r(__webpack_exports__);
        /* harmony import */


        var _elementr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
        /*! ./elementr */
        "./src/scripts/elementr/index.js");
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "elements", function () {
          return _elementr__WEBPACK_IMPORTED_MODULE_0__["elements"];
        });
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "eR", function () {
          return _elementr__WEBPACK_IMPORTED_MODULE_0__["eR"];
        });
        /* harmony import */


        var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
        /*! ./store */
        "./src/scripts/store/index.js");
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "constants", function () {
          return _store__WEBPACK_IMPORTED_MODULE_1__["constants"];
        });
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "createStore", function () {
          return _store__WEBPACK_IMPORTED_MODULE_1__["createStore"];
        });
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "dispatcher", function () {
          return _store__WEBPACK_IMPORTED_MODULE_1__["dispatcher"];
        });
        /***/

      },

      /***/
      "./src/scripts/store/constants.js":
      /*!****************************************!*\
        !*** ./src/scripts/store/constants.js ***!
        \****************************************/

      /*! exports provided: default */

      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        "use strict";

        __webpack_require__.r(__webpack_exports__);

        function _objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            var ownKeys = Object.keys(source);

            if (typeof Object.getOwnPropertySymbols === 'function') {
              ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
              }));
            }

            ownKeys.forEach(function (key) {
              _defineProperty(target, key, source[key]);
            });
          }

          return target;
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
            });
          } else {
            obj[key] = value;
          }

          return obj;
        }

        function _typeof(obj) {
          if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            _typeof = function _typeof(obj) {
              return typeof obj;
            };
          } else {
            _typeof = function _typeof(obj) {
              return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            };
          }

          return _typeof(obj);
        }

        var _CONSTANTS = {};

        var arr2Obj = function arr2Obj(acts) {
          return acts.reduce(function (actions, action) {
            return (actions[action.toUpperCase()] = action.toUpperCase()) && actions;
          }, {});
        };

        var add = function add(consts) {
          if (_typeof(consts) !== 'object') console.warn("add method requires an object or array as it's only param");
          _CONSTANTS = Object.freeze(_objectSpread({}, _CONSTANTS, Array.isArray(consts) ? arr2Obj(consts) : consts));
          return _CONSTANTS;
        };

        var get = function get() {
          return _CONSTANTS;
        };
        /* harmony default export */


        __webpack_exports__["default"] = {
          add: add,
          get: get
        };
        /***/
      },

      /***/
      "./src/scripts/store/dispatcher.js":
      /*!*****************************************!*\
        !*** ./src/scripts/store/dispatcher.js ***!
        \*****************************************/

      /*! exports provided: default */

      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        "use strict";

        __webpack_require__.r(__webpack_exports__);
        /* harmony import */


        var lodash_clonedeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
        /*! lodash.clonedeep */
        "./node_modules/lodash.clonedeep/index.js");
        /* harmony import */


        var lodash_clonedeep__WEBPACK_IMPORTED_MODULE_0___default =
        /*#__PURE__*/
        __webpack_require__.n(lodash_clonedeep__WEBPACK_IMPORTED_MODULE_0__);

        function _objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            var ownKeys = Object.keys(source);

            if (typeof Object.getOwnPropertySymbols === 'function') {
              ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
              }));
            }

            ownKeys.forEach(function (key) {
              _defineProperty(target, key, source[key]);
            });
          }

          return target;
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true
            });
          } else {
            obj[key] = value;
          }

          return obj;
        }

        function _typeof(obj) {
          if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
            _typeof = function _typeof(obj) {
              return typeof obj;
            };
          } else {
            _typeof = function _typeof(obj) {
              return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            };
          }

          return _typeof(obj);
        }

        function _slicedToArray(arr, i) {
          return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
        }

        function _nonIterableRest() {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }

        function _iterableToArrayLimit(arr, i) {
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;

          try {
            for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
              _arr.push(_s.value);

              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i["return"] != null) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }

          return _arr;
        }

        function _arrayWithHoles(arr) {
          if (Array.isArray(arr)) return arr;
        }

        var WATCHERS = {};
        var ON_DISPATCH;
        var STATE;

        var isFunc = function isFunc(test) {
          return typeof test === 'function';
        };

        var destroy = function destroy() {
          Object.entries(WATCHERS).map(function (_ref) {
            var _ref2 = _slicedToArray(_ref, 2),
                id = _ref2[0],
                cbs = _ref2[1];

            cbs && cbs.map(function (cb) {
              return cb && typeof cb.destroy === 'function' && cb.destroy(id);
            });
            WATCHERS[id] = undefined;
            delete WATCHERS[id];
          });
          ON_DISPATCH = undefined;
          STATE = undefined;
        };

        var dispatch = function dispatch(id) {
          if (!ON_DISPATCH) return console.warn("You must create a store before you can dispatch to it");

          for (var _len = arguments.length, payload = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            payload[_key - 1] = arguments[_key];
          }

          return update(ON_DISPATCH.apply(void 0, [STATE, id].concat(payload)), id);
        };

        var create = function create(onDispatch, state) {
          if (ON_DISPATCH || STATE) return console.warn("dispatcher.create should only be call once for an application");
          if (!onDispatch || !isFunc(onDispatch)) return console.warn("dispatcher.create requires an 'onDispatch' method");
          if (!state || _typeof(state) !== 'object') return console.warn("dispatcher.create requires an initial state of type 'object'");
          ON_DISPATCH = onDispatch;
          STATE = lodash_clonedeep__WEBPACK_IMPORTED_MODULE_0___default()(state);
          return STATE;
        };

        var update = function update(updatedState, id) {
          if (!updatedState || STATE === updatedState) return STATE;
          STATE = _objectSpread({}, STATE, updatedState);
          var cbs = WATCHERS[id];
          cbs && cbs.length && cbs.map(function (cb) {
            return typeof cb === 'function' && cb(STATE);
          });
          return STATE;
        };

        var watch = function watch(id, cb) {
          if (!cb || typeof cb !== "function") console.warn("You must pass a function as the second argument to store.listen()");
          WATCHERS[id] = WATCHERS[id] || [];
          WATCHERS[id].push(cb);
        };

        var getWatchers = function getWatchers() {
          return WATCHERS;
        };

        var getState = function getState() {
          return STATE;
        };

        var getDispatch = function getDispatch() {
          return ON_DISPATCH;
        };

        var forget = function forget(id, cb) {
          if (!id || !WATCHERS[id]) console.warn("You must pass and id to forget a watcher");
          var cbIndex = WATCHERS[id].indexOf(cb);
          cbIndex !== -1 && WATCHERS[id].splice(cbIndex, 1);
        };

        var dispatcher = {
          create: create,
          destroy: destroy,
          dispatch: dispatch,
          forget: forget,
          getDispatch: getDispatch,
          getState: getState,
          getWatchers: getWatchers,
          watch: watch,
          update: update
        };
        /* harmony default export */

        __webpack_exports__["default"] = dispatcher;
        /***/
      },

      /***/
      "./src/scripts/store/index.js":
      /*!************************************!*\
        !*** ./src/scripts/store/index.js ***!
        \************************************/

      /*! exports provided: constants, createStore, dispatcher */

      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        "use strict";

        __webpack_require__.r(__webpack_exports__);
        /* harmony import */


        var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
        /*! ./constants */
        "./src/scripts/store/constants.js");
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "constants", function () {
          return _constants__WEBPACK_IMPORTED_MODULE_0__["default"];
        });
        /* harmony import */


        var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
        /*! ./store */
        "./src/scripts/store/store.js");
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "createStore", function () {
          return _store__WEBPACK_IMPORTED_MODULE_1__["default"];
        });
        /* harmony import */


        var _dispatcher__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
        /*! ./dispatcher */
        "./src/scripts/store/dispatcher.js");
        /* harmony reexport (safe) */


        __webpack_require__.d(__webpack_exports__, "dispatcher", function () {
          return _dispatcher__WEBPACK_IMPORTED_MODULE_2__["default"];
        });
        /***/

      },

      /***/
      "./src/scripts/store/store.js":
      /*!************************************!*\
        !*** ./src/scripts/store/store.js ***!
        \************************************/

      /*! exports provided: default */

      /***/
      function (module, __webpack_exports__, __webpack_require__) {
        "use strict";

        __webpack_require__.r(__webpack_exports__);
        /* harmony import */


        var _dispatcher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
        /*! ./dispatcher */
        "./src/scripts/store/dispatcher.js");

        var create = _dispatcher__WEBPACK_IMPORTED_MODULE_0__["default"].create;
        /* harmony default export */

        __webpack_exports__["default"] = function (reducer, initialState) {
          return create(reducer, initialState);
        };
        /***/

      }
      /******/

    })
  );
});

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,