{"version":3,"sources":["webpack://[name]/./src/scripts/modules/types/definitions/empty/empty.js"],"names":["EmptyType","config","_this","_classCallCheck","this","_getPrototypeOf","call","_objectSpread","_defineProperty","_assertThisInitialized","e","Editor","id","shouldDoDefault","remove","userEvents","onCancel","input","target","currentTarget","value","key","getAttribute","Values","DATA_SCHEMA_KEY","undefined","original","expandOnChange","setWidth","update","matchType","onChange","props","_props$schema","schema","keyType","mode","parent","error","Types","settings","Item","Array","isArray","type","Schema","EMPTY","showLabel","keyEdit","MODES","EDIT","getActions","onTypeChange","BaseType","newType"],"mappings":"gsCAIMA,cAMJ,SAAAA,EAAYC,GAAO,IAAAC,MAAA,mGAAAC,CAAAC,KAAAJ,KACjBI,OAAAC,EAAAL,GAAAM,KAAAF,KAAAG,EAAA,GAAWN,IAAXC,mDADiBM,EAAAC,EAAAP,GAAA,WAIR,SAACQ,EAAGC,GACb,IACMC,EAAKV,EAAKW,gBAAiBH,EADlB,CAAEI,QAAQ,GACmBH,EAAQT,EAAKa,WAAWC,UACpEJ,GAAMD,EAAOG,OAAOF,KAPHJ,EAAAC,EAAAP,GAAA,eAUJ,SAACQ,EAAGC,GACjB,IAAMM,EAASP,EAAEQ,QAAUR,EAAES,cACvBC,EAAQH,EAAMG,MACdC,EAAMJ,EAAMK,aAAaC,IAAOC,iBAEtC,UACaC,IAAVL,QAA+BK,IAARJ,GACvBnB,EAAKwB,SAASL,IAAQnB,EAAKwB,SAASL,KAASD,GAFhD,CAKAA,IAAyC,IAA/BlB,EAAKD,OAAO0B,gBAA4BzB,EAAK0B,SAASX,GAChE,IAAMY,EAAS,CAAEC,UAAWV,IAEsC,IAAlElB,EAAKa,WAAWgB,SAASrB,EAAGmB,EAAQ3B,EAAKwB,SAASd,GAAID,IACpDT,EAAKwB,SAASd,IACdD,EAAOkB,OAAO3B,EAAKwB,SAASd,GAAIiB,MAzBjBrB,EAAAC,EAAAP,GAAA,SA6BV,SAAA8B,GAAS,IAAAC,EAIZD,EAFFE,OAAUtB,EAFIqB,EAEJrB,GAAIS,EAFAY,EAEAZ,IAA6Bc,GAF7BF,EAEKb,MAFLa,EAEYG,KAFZH,EAEkBH,UAFlBG,EAE6BE,SAASE,EAFtCJ,EAEsCI,OAAQC,EAF9CL,EAE8CK,MACtCC,EACpBP,EADFQ,SAAY7B,OAAU4B,MAGxB,OAAOE,eAAIlC,EAAA,CACTK,KACAQ,MAAO,GACPmB,QACAD,QACAjB,IAAKqB,MAAMC,QAAQN,EAAOjB,OAASC,EAAM,GACzCuB,KAAMC,IAAOC,MACbC,WAAW,EACXZ,QAASA,GAAW,OACpBa,SAAUX,IAAWK,MAAMC,QAAQN,EAAOjB,OAC1CgB,KAAMS,IAAOI,MAAMC,MAChBhD,EAAKiD,WAAWN,IAAOI,MAAMC,KAAM,CAAEE,aAAclD,EAAKkD,mBA9C5ClD,8OANGmD,qBAAlBrD,aAEc,KAFdA,SAGU,SAACoB,GAAD,YAAsBK,IAAVL,MAHtBpB,iBAIkB,SAACsD,EAASpB,EAAQM,MAsD3BxC","file":"type-definitions-empty-empty.min.js","sourcesContent":["import BaseType from '../base'\nimport { Item } from '../../components'\nimport { Values, Schema } from 'jTConstants'\n\nclass EmptyType extends BaseType {\n\n  static priority = 1\n  static eval = (value) => (value === undefined)\n  static defaultValue = (newType, schema, settings) => undefined\n\n  constructor(config){\n    super({ ...config })\n  }\n\n  onCancel = (e, Editor) => {\n    const update = { remove: true }\n    const id = this.shouldDoDefault( e, update, Editor, this.userEvents.onCancel )\n    id && Editor.remove(id)\n  }\n\n  onTypeChange = (e, Editor) => {\n    const input =  e.target || e.currentTarget\n    const value = input.value\n    const key = input.getAttribute(Values.DATA_SCHEMA_KEY)\n\n    if(\n      (value === undefined || key === undefined) ||\n      (this.original[key] && this.original[key] === value)\n    ) return\n\n    value &&  this.config.expandOnChange !== false && this.setWidth(input)\n    const update = { matchType: value }\n\n    this.userEvents.onChange(e, update, this.original.id, Editor) !== false &&\n      this.original.id && \n      Editor.update(this.original.id, update)\n\n  }\n\n  render = props => {\n    const {\n      schema: { id, key, value, mode, matchType, keyType, parent, error },\n      settings: { Editor: { Types } }\n    } = props\n\n    return Item({\n      id,\n      value: '',\n      Types,\n      error,\n      key: Array.isArray(parent.value) ? key : '',\n      type: Schema.EMPTY,\n      showLabel: true,\n      keyType: keyType || 'text',\n      keyEdit: !parent || !Array.isArray(parent.value),\n      mode: Schema.MODES.EDIT,\n      ...this.getActions(Schema.MODES.EDIT, { onTypeChange: this.onTypeChange })\n    })\n  }\n\n}\n\nexport default EmptyType"],"sourceRoot":""}